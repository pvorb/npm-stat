{"version":3,"sources":["webpack:///charts.js","webpack:///webpack/bootstrap 23939bc0a23e92c63354","webpack:///./src/main/js/charts.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/moment/locale ^$","webpack:///./~/moment/moment.js","webpack:///./~/pinkie-promise/index.js","webpack:///./~/pinkie/index.js","webpack:///./~/process/browser.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/main/js/escape-html.js","webpack:///./src/main/js/object-keys-polyfill.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","getDateRange","startDate","stopDate","dateArray","current","moment","startOf","stop","isSameOrBefore","push","toDate","add","showChart","title","data","xAxisType","xAxisTitle","cats","series","$","map","values","packageName","name","type","Highcharts","Chart","chart","renderTo","zoomType","colors","text","style","color","subtitle","document","ontouchstart","exporting","enableImages","credits","enabled","xAxis","maxZoom","lineColor","categories","labels","rotation","yAxis","min","startOnTick","showFirstLabel","tooltip","shared","legend","length","plotOptions","spline","marker","radius","lineWidth","states","hover","threshold","calculateTotalDownloads","downloadsPerDay","totalDownloads","each","date","downloadsOfDay","formatNumber","number","toString","replace","getDailyDownloadData","downloadData","dateRange","dailyData","i","key","dateToDayKey","dateAsMidnight","valueOf","format","dateToWeekKey","dateToMonthKey","dateToYearKey","getDataGroupedPerPeriod","dateToPeriod","nthVisibleAxisLabel","groupedData","xAxisLabels","coveredPeriods","periodSum","lastPeriod","currentPeriod","y","Object","keys","requestData","url","ajax","dataType","getDownloadsUrl","packageNames","fromDate","untilDate","console","dir","packageNamesQueryString","encodeURIComponent","trim","sumUpDownloadCounts","summedUpDownloads","packageDownloads","packageDownloadsForDate","total","drawCharts","dailyDownloadData","weeklyDownloadData","monthlyDownloadData","annualDownloadData","showTotalDownloads","sanitizedData","showSum","sum","$table","totals","downloads","sortedTotals","sort","a","b","index","packageHtml","append","after","getDownloadData","Promise","accept","reject","downloadsUrl","showPackageStats","joinedPackageNames","join","$nameType","val","attr","window","alert","$npmStat","then","remove","showAuthorStats","authorName","html","getPackagesForAuthor","summedUpDownloadCounts","initDate","urlParams","baseDate","subtract","isValid","querystring","escapeHtml","change","replaceWith","decode","location","search","substring","Array","submitForm","formData","split","encode","setImmediate","clearImmediate","Timeout","clearFn","this","_id","_clearFn","nextTick","apply","Function","prototype","slice","immediateIds","nextImmediateId","setTimeout","arguments","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","fn","args","webpackContext","req","Error","resolve","global","factory","hooks","hookCallback","setHookCallback","callback","isArray","input","isObject","isObjectEmpty","obj","k","isUndefined","isNumber","isDate","Date","arr","res","hasOwnProp","hasOwnProperty","extend","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","len","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","arg","stack","deprecateSimple","deprecations","isFunction","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","d","h","M","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","loadLocale","oldLocale","locales","globalLocale","_abbr","e","code","getSetGlobalLocale","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","x","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","indexOf","splice","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","limit","withSuffix","toISOString$1","abs$1","Y","D","asSeconds","some","fun","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","asyncFlush","asyncQueue","asyncTimer","asyncCall","asyncSetTimer","invokeResolver","resolver","promise","resolvePromise","rejectPromise","reason","invokeCallback","subscriber","owner","settled","_state","FULFILLED","handleThenable","REJECTED","resolved","TypeError","fulfill","PENDING","SETTLED","publishFulfillment","publishRejection","publish","_then","_handled","isNode","process","emit","notifyRejectionHandled","NOOP","constructor","onFulfillment","onRejection","fulfilled","rejected","catch","all","promises","remaining","results","race","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","run","Item","noop","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","qs","sep","eq","options","regexp","maxKeys","kstr","vstr","v","idx","decodeURIComponent","stringifyPrimitive","ks","parse","stringify","webpackPolyfill","paths","children","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","result"],"mappings":"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","file":"charts.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * Copyright 2012-2017 the original author or authors.\n\t *\n\t *  Licensed under the Apache License, Version 2.0 (the \"License\");\n\t *  you may not use this file except in compliance with the License.\n\t *  You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t *  Unless required by applicable law or agreed to in writing, software\n\t *  distributed under the License is distributed on an \"AS IS\" BASIS,\n\t *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t *  See the License for the specific language governing permissions and\n\t *  limitations under the License.\n\t */\n\tvar querystring = __webpack_require__(9);\n\tvar escapeHtml = __webpack_require__(11);\n\tvar moment = __webpack_require__(3);\n\tvar Promise = __webpack_require__(4);\n\t\n\t__webpack_require__(12);\n\t\n\tvar $nameType = $('<select id=\"nameType\">\\n'\n\t    + '    <option value=\"package\" selected>Package</option>\\n'\n\t    + '    <option value=\"author\">Author</option>\\n'\n\t    + '</select>');\n\t\n\t$nameType.change(function () {\n\t    if ($nameType.val() === 'package') {\n\t        $('#name').attr('name', 'package').attr('placeholder', 'package name(s) (comma separated)');\n\t    } else if ($nameType.val() === 'author') {\n\t        $('#name').attr('name', 'author').attr('placeholder', 'author name');\n\t    }\n\t});\n\t\n\tfunction getDateRange(startDate, stopDate) {\n\t    var dateArray = [];\n\t    var current = moment(startDate).startOf('day');\n\t    var stop = moment(stopDate).startOf('day');\n\t    while (current.isSameOrBefore(stop)) {\n\t        dateArray.push(current.toDate());\n\t        current = current.add(1, 'days');\n\t    }\n\t    return dateArray;\n\t}\n\t\n\tfunction showChart(id, title, data, xAxisType, xAxisTitle, cats) {\n\t\n\t    var series = $.map(data, function (values, packageName) {\n\t        return {\n\t            name: packageName,\n\t            data: values,\n\t            type: 'spline'\n\t        };\n\t    });\n\t\n\t    new Highcharts.Chart({\n\t        chart: {\n\t            renderTo: id,\n\t            zoomType: 'x'\n\t        },\n\t        colors: ['#CC333F', '#00A0B0', '#73AC42', '#EB6841', '#542437'],\n\t        title: {\n\t            text: title,\n\t            style: {\n\t                color: '#000000'\n\t            }\n\t        },\n\t        subtitle: {\n\t            text: typeof document.ontouchstart === 'undefined' ?\n\t                'Click and drag in the plot to zoom in' :\n\t                'Drag your finger over the plot to zoom in',\n\t            style: {\n\t                color: '#000000'\n\t            }\n\t        },\n\t        exporting: {\n\t            enableImages: true\n\t        },\n\t        credits: {\n\t            enabled: false\n\t        },\n\t        xAxis: (xAxisType === 'datetime' ? {\n\t            type: xAxisType,\n\t            maxZoom: 14 * 24 * 60 * 60 * 1000,\n\t            lineColor: '#000000',\n\t            title: {\n\t                text: xAxisTitle,\n\t                style: {\n\t                    color: '#000000'\n\t                }\n\t            }\n\t        } : {\n\t                type: xAxisType,\n\t                lineColor: '#000000',\n\t                categories: cats,\n\t                labels: {\n\t                    rotation: -20\n\t                },\n\t                title: {\n\t                    text: xAxisTitle,\n\t                    style: {\n\t                        color: '#000000'\n\t                    }\n\t                }\n\t            }),\n\t        yAxis: {\n\t            min: 0,\n\t            startOnTick: false,\n\t            showFirstLabel: false,\n\t            title: {\n\t                text: 'Downloads',\n\t                style: {\n\t                    color: '#000000'\n\t                }\n\t            }\n\t        },\n\t        tooltip: {\n\t            shared: true\n\t        },\n\t        legend: {\n\t            enabled: series.length > 1\n\t        },\n\t        plotOptions: {\n\t            spline: {\n\t                marker: {\n\t                    radius: 1.5\n\t                },\n\t                lineWidth: 1,\n\t                states: {\n\t                    hover: {\n\t                        lineWidth: 1\n\t                    }\n\t                },\n\t                threshold: null\n\t            }\n\t        },\n\t        series: series\n\t    });\n\t}\n\t\n\tfunction calculateTotalDownloads(downloadsPerDay) {\n\t    var totalDownloads = 0;\n\t    $.each(downloadsPerDay, function (date, downloadsOfDay) {\n\t        totalDownloads += downloadsOfDay;\n\t    });\n\t    return totalDownloads;\n\t}\n\t\n\tfunction formatNumber(number) {\n\t    return number.toString()\n\t        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\t}\n\t\n\tfunction getDailyDownloadData(downloadData, dateRange) {\n\t\n\t    var dailyData = {};\n\t\n\t    $.each(downloadData, function (packageName, data) {\n\t        var values = [];\n\t        for (var i = 0; i < dateRange.length; i++) {\n\t            var key = dateToDayKey(dateRange[i]);\n\t            var dateAsMidnight = moment(dateRange[i]).startOf('day').valueOf();\n\t            values.push([dateAsMidnight, data[key] || 0]);\n\t        }\n\t        dailyData[packageName] = values;\n\t    });\n\t\n\t    return dailyData;\n\t}\n\t\n\tfunction dateToDayKey(date) {\n\t    return moment(date).format('YYYY-MM-DD');\n\t}\n\t\n\tfunction dateToWeekKey(date) {\n\t    return moment(date).format('GGGG-[W]WW');\n\t}\n\t\n\tfunction dateToMonthKey(date) {\n\t    return moment(date).format('MMM YYYY');\n\t}\n\t\n\tfunction dateToYearKey(date) {\n\t    return moment(date).format('YYYY');\n\t}\n\t\n\tfunction getDataGroupedPerPeriod(downloadData, dateRange, dateToPeriod, nthVisibleAxisLabel) {\n\t\n\t    var groupedData = {};\n\t\n\t    var xAxisLabels = null;\n\t    var coveredPeriods = {};\n\t\n\t    $.each(downloadData, function (packageName, data) {\n\t        var values = [];\n\t\n\t        var periodSum = 0;\n\t        var lastPeriod = null;\n\t\n\t        for (var i = 0; i < dateRange.length; i++) {\n\t\n\t            var key = dateToDayKey(dateRange[i]);\n\t            var currentPeriod = dateToPeriod(dateRange[i]);\n\t\n\t            if (coveredPeriods !== null) {\n\t                coveredPeriods[currentPeriod] = true;\n\t            }\n\t\n\t            if (currentPeriod !== lastPeriod && lastPeriod !== null) {\n\t                values.push({ name: lastPeriod, y: periodSum });\n\t                periodSum = 0;\n\t            }\n\t\n\t            periodSum += data[key] || 0;\n\t\n\t            lastPeriod = currentPeriod;\n\t\n\t            if (i === dateRange.length - 1) {\n\t                // push data for last (incomplete) period\n\t                values.push({ name: currentPeriod, y: periodSum });\n\t            }\n\t        }\n\t\n\t        if (coveredPeriods !== null) {\n\t            xAxisLabels = Object.keys(coveredPeriods);\n\t        }\n\t\n\t        coveredPeriods = null;\n\t\n\t        groupedData[packageName] = values;\n\t    });\n\t\n\t    for (var i = 0; i < xAxisLabels.length; i++) {\n\t        if (i % nthVisibleAxisLabel !== 0) {\n\t            xAxisLabels[i] = ' ';\n\t        }\n\t    }\n\t\n\t    return {\n\t        data: groupedData,\n\t        xAxisLabels: xAxisLabels\n\t    };\n\t}\n\t\n\tfunction requestData(url) {\n\t    return $.ajax({\n\t        url: url,\n\t        dataType: 'json'\n\t    });\n\t}\n\t\n\tfunction getDownloadsUrl(packageNames, fromDate, untilDate) {\n\t\n\t    console.dir(packageNames);\n\t\n\t    var packageNamesQueryString = '';\n\t    $.each(packageNames, function (i, packageName) {\n\t        packageNamesQueryString += 'package=' + encodeURIComponent(packageName.trim()) + '&';\n\t    });\n\t\n\t    return '/api/download-counts?' + packageNamesQueryString\n\t        + 'from=' + dateToDayKey(fromDate)\n\t        + '&until=' + dateToDayKey(untilDate);\n\t}\n\t\n\tfunction sumUpDownloadCounts(downloadData) {\n\t    var summedUpDownloads = {};\n\t    $.each(downloadData, function (packageName, packageDownloads) {\n\t        $.each(packageDownloads, function (date, packageDownloadsForDate) {\n\t            if (typeof summedUpDownloads[date] !== 'undefined') {\n\t                summedUpDownloads[date] = summedUpDownloads[date] + packageDownloadsForDate;\n\t            } else {\n\t                summedUpDownloads[date] = packageDownloadsForDate;\n\t            }\n\t        })\n\t    });\n\t\n\t    return { total: summedUpDownloads };\n\t}\n\t\n\tfunction drawCharts(downloadData, fromDate, untilDate) {\n\t\n\t    var dateRange = getDateRange(fromDate, untilDate);\n\t\n\t    var dailyDownloadData = getDailyDownloadData(downloadData, dateRange);\n\t    showChart('days', 'Downloads per day', dailyDownloadData, 'datetime', 'Date');\n\t\n\t    var weeklyDownloadData = getDataGroupedPerPeriod(downloadData, dateRange, dateToWeekKey, 4);\n\t    showChart('weeks', 'Downloads per week', weeklyDownloadData.data, 'categories', 'Week',\n\t        weeklyDownloadData.xAxisLabels);\n\t\n\t    var monthlyDownloadData = getDataGroupedPerPeriod(downloadData, dateRange, dateToMonthKey, 1);\n\t    showChart('months', 'Downloads per month', monthlyDownloadData.data, 'categories', 'Month',\n\t        monthlyDownloadData.xAxisLabels);\n\t\n\t    var annualDownloadData = getDataGroupedPerPeriod(downloadData, dateRange, dateToYearKey, 1);\n\t    showChart('years', 'Downloads per year', annualDownloadData.data, 'categories', 'Year',\n\t        annualDownloadData.xAxisLabels);\n\t\n\t}\n\t\n\tfunction showTotalDownloads(sanitizedData, fromDate, untilDate, showSum) {\n\t\n\t    var sum = 0;\n\t    var $table = $('<table class=\"alternating\"><tr><td>package</td><td>downloads</td></tr></table>');\n\t\n\t    var totals = $.map(sanitizedData, function (downloads, packageName) {\n\t        var totalDownloads = calculateTotalDownloads(downloads);\n\t\n\t        if (showSum) {\n\t            sum += totalDownloads;\n\t        }\n\t\n\t        return { packageName: packageName, downloads: totalDownloads };\n\t    });\n\t\n\t    var sortedTotals = totals.sort(function (a, b) {\n\t        return b.downloads - a.downloads;\n\t    });\n\t\n\t    $.each(sortedTotals, function (index, total) {\n\t\n\t        var packageHtml;\n\t\n\t        if (showSum) {\n\t            packageHtml = '<a href=\"charts.html?package=' + total.packageName\n\t                + '&from=' + dateToDayKey(fromDate) + '&to=' + dateToDayKey(untilDate) + '\">'\n\t                + total.packageName + '</a>';\n\t        } else {\n\t            packageHtml = total.packageName;\n\t        }\n\t\n\t        $table.append('<tr><td>' + packageHtml + '</td><td>' + formatNumber(total.downloads) + '</td></tr>');\n\t    });\n\t\n\t    if (showSum) {\n\t        $table.append('<tr><td><strong>Σ</strong></td><td><strong>' + formatNumber(sum) + '</strong></td></tr>');\n\t    }\n\t\n\t    $('#pkgs')\n\t        .after($table)\n\t        .after('<p>Total number of downloads between <em>'\n\t        + dateToDayKey(fromDate) + '</em> and <em>'\n\t        + dateToDayKey(untilDate) + '</em>:');\n\t}\n\t\n\tfunction getDownloadData(packageNames, fromDate, untilDate) {\n\t    return new Promise(function (accept, reject) {\n\t\n\t        var downloadsUrl = getDownloadsUrl(packageNames, fromDate, untilDate);\n\t\n\t        var downloadData = requestData(downloadsUrl);\n\t\n\t        return accept(downloadData);\n\t    });\n\t}\n\t\n\t\n\tfunction showPackageStats(packageNames, fromDate, untilDate) {\n\t\n\t    var joinedPackageNames = packageNames.join(', ');\n\t\n\t    $('h2').append(' for package'\n\t        + (packageNames.length > 1 ? 's' : '')\n\t        + ' <em>' + joinedPackageNames + '</em>');\n\t    $nameType.val('package');\n\t    $('#name')\n\t        .attr('name', 'package')\n\t        .val(joinedPackageNames);\n\t\n\t    if (packageNames.length > 5) {\n\t        window.alert('You cannot compare more than 5 packages at once.');\n\t        return;\n\t    }\n\t\n\t    var $npmStat = $('#npm-stat');\n\t\n\t    $npmStat.after('<p id=\"loading\"><img src=\"loading.gif\" /></p>');\n\t\n\t    if (packageNames.length === 1) {\n\t        $npmStat.after('<p><a href=\"https://www.npmjs.com/package/' + packageNames + '\">View package on npm</a></p>');\n\t    }\n\t\n\t    getDownloadData(packageNames, fromDate, untilDate).then(function (downloadData) {\n\t\n\t        $('#loading').remove();\n\t\n\t        showTotalDownloads(downloadData, fromDate, untilDate, false);\n\t\n\t        drawCharts(downloadData, fromDate, untilDate);\n\t\n\t    });\n\t}\n\t\n\tfunction showAuthorStats(authorName, fromDate, untilDate) {\n\t    $('h2').html('Downloads for author <em>' + authorName + '</em>');\n\t    $nameType.val('author');\n\t    $('#name')\n\t        .attr('name', 'author')\n\t        .val(authorName);\n\t    $('#npm-stat').after('<p id=\"loading\"></p><p><a href=\"https://npmjs.org/~'\n\t        + authorName + '\">View author on npm</a></p>');\n\t\n\t    $('#loading').html('<img src=\"loading.gif\" />');\n\t\n\t    getPackagesForAuthor(authorName).then(function (packageNames) {\n\t\n\t        getDownloadData(packageNames, fromDate, untilDate).then(function (sanitizedData) {\n\t\n\t            $('#loading').remove();\n\t\n\t            showTotalDownloads(sanitizedData, fromDate, untilDate, true);\n\t\n\t            var summedUpDownloadCounts = sumUpDownloadCounts(sanitizedData);\n\t\n\t            drawCharts(summedUpDownloadCounts, fromDate, untilDate);\n\t\n\t        });\n\t\n\t    });\n\t}\n\t\n\tfunction getPackagesForAuthor(authorName) {\n\t    var url = '/api/author-packages?author=' + authorName;\n\t    return requestData(url)\n\t}\n\t\n\tfunction initDate(urlParams, type, baseDate) {\n\t    var date;\n\t\n\t    if (urlParams[type]) {\n\t        date = moment(urlParams[type]).startOf('day');\n\t    } else if (baseDate) {\n\t        date = moment(baseDate).startOf('day').subtract(1, 'year');\n\t    } else {\n\t        date = moment().startOf('day').subtract(1, 'day');\n\t    }\n\t    if (!date.isValid()) {\n\t        alert('Invalid date format in URL parameter \"' + type + '\"');\n\t        return;\n\t    }\n\t    date = date.toDate();\n\t    $('input[name=\"' + type + '\"]').val(dateToDayKey(date));\n\t\n\t    return date;\n\t}\n\t\n\t$(function () {\n\t    $('#nameType').replaceWith($nameType);\n\t    $('#from, #to').attr('title', 'If the date fields are omitted, you will see the data of the past year.');\n\t\n\t    var urlParams = querystring.decode(window.location.search ? window.location.search.substring(1) : '');\n\t\n\t    var packageNames = urlParams['package'];\n\t    var authorName = escapeHtml(urlParams['author']);\n\t\n\t    if (!packageNames && !authorName) {\n\t        return;\n\t    }\n\t\n\t    var untilDate = initDate(urlParams, 'to');\n\t    var fromDate = initDate(urlParams, 'from', untilDate);\n\t\n\t    if (packageNames) {\n\t        if (!(packageNames instanceof Array)) {\n\t            packageNames = [packageNames];\n\t        }\n\t\n\t        packageNames = $.map(packageNames, function (packageName) {\n\t            return escapeHtml(packageName.trim());\n\t        });\n\t\n\t        $('title').html('npm-stat: ' + packageNames.join(', '));\n\t        showPackageStats(packageNames, fromDate, untilDate);\n\t    } else if (authorName) {\n\t        $('title').html('npm-stat: ' + authorName);\n\t        showAuthorStats(authorName, fromDate, untilDate);\n\t    }\n\t});\n\t\n\twindow.submitForm = function submitForm() {\n\t\n\t    var formData = {};\n\t\n\t    if ($nameType.val() === 'package') {\n\t        var packageNames = $('input[name=package]').val().split(',');\n\t\n\t        if (packageNames.length >= 1 && packageNames[0].trim() !== '') {\n\t            formData['package'] = $.map(packageNames, function (packageName) {\n\t                return packageName.trim();\n\t            });\n\t        } else {\n\t            formData['package'] = ['clone'];\n\t        }\n\t    } else if ($nameType.val() === 'author') {\n\t        var authorName = $('input[name=author]').val();\n\t        formData['author'] = authorName || 'pvorb';\n\t    }\n\t\n\t    formData['from'] = $('#from').val();\n\t    formData['to'] = $('#to').val();\n\t\n\t    for (var key in formData) {\n\t        if (!formData[key]) {\n\t            delete formData[key];\n\t        }\n\t    }\n\t\n\t    window.location = '/charts.html?' + querystring.encode(formData);\n\t\n\t    return false;\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(6).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).setImmediate, __webpack_require__(1).clearImmediate))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tfunction webpackContext(req) {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t}\n\twebpackContext.keys = function() { return []; };\n\twebpackContext.resolve = webpackContext;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 2;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.18.1\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, (function () { 'use strict';\n\t\n\tvar hookCallback;\n\t\n\tfunction hooks () {\n\t    return hookCallback.apply(null, arguments);\n\t}\n\t\n\t// This is done to register the method called with moment()\n\t// without creating circular dependencies.\n\tfunction setHookCallback (callback) {\n\t    hookCallback = callback;\n\t}\n\t\n\tfunction isArray(input) {\n\t    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n\t}\n\t\n\tfunction isObject(input) {\n\t    // IE8 will treat undefined and null as object if it wasn't for\n\t    // input != null\n\t    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n\t}\n\t\n\tfunction isObjectEmpty(obj) {\n\t    var k;\n\t    for (k in obj) {\n\t        // even if its not own property I'd still call it non-empty\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction isUndefined(input) {\n\t    return input === void 0;\n\t}\n\t\n\tfunction isNumber(input) {\n\t    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n\t}\n\t\n\tfunction isDate(input) {\n\t    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t}\n\t\n\tfunction map(arr, fn) {\n\t    var res = [], i;\n\t    for (i = 0; i < arr.length; ++i) {\n\t        res.push(fn(arr[i], i));\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction hasOwnProp(a, b) {\n\t    return Object.prototype.hasOwnProperty.call(a, b);\n\t}\n\t\n\tfunction extend(a, b) {\n\t    for (var i in b) {\n\t        if (hasOwnProp(b, i)) {\n\t            a[i] = b[i];\n\t        }\n\t    }\n\t\n\t    if (hasOwnProp(b, 'toString')) {\n\t        a.toString = b.toString;\n\t    }\n\t\n\t    if (hasOwnProp(b, 'valueOf')) {\n\t        a.valueOf = b.valueOf;\n\t    }\n\t\n\t    return a;\n\t}\n\t\n\tfunction createUTC (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t}\n\t\n\tfunction defaultParsingFlags() {\n\t    // We need to deep clone this object.\n\t    return {\n\t        empty           : false,\n\t        unusedTokens    : [],\n\t        unusedInput     : [],\n\t        overflow        : -2,\n\t        charsLeftOver   : 0,\n\t        nullInput       : false,\n\t        invalidMonth    : null,\n\t        invalidFormat   : false,\n\t        userInvalidated : false,\n\t        iso             : false,\n\t        parsedDateParts : [],\n\t        meridiem        : null,\n\t        rfc2822         : false,\n\t        weekdayMismatch : false\n\t    };\n\t}\n\t\n\tfunction getParsingFlags(m) {\n\t    if (m._pf == null) {\n\t        m._pf = defaultParsingFlags();\n\t    }\n\t    return m._pf;\n\t}\n\t\n\tvar some;\n\tif (Array.prototype.some) {\n\t    some = Array.prototype.some;\n\t} else {\n\t    some = function (fun) {\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t\n\t        for (var i = 0; i < len; i++) {\n\t            if (i in t && fun.call(this, t[i], i, t)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    };\n\t}\n\t\n\tvar some$1 = some;\n\t\n\tfunction isValid(m) {\n\t    if (m._isValid == null) {\n\t        var flags = getParsingFlags(m);\n\t        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n\t            return i != null;\n\t        });\n\t        var isNowValid = !isNaN(m._d.getTime()) &&\n\t            flags.overflow < 0 &&\n\t            !flags.empty &&\n\t            !flags.invalidMonth &&\n\t            !flags.invalidWeekday &&\n\t            !flags.nullInput &&\n\t            !flags.invalidFormat &&\n\t            !flags.userInvalidated &&\n\t            (!flags.meridiem || (flags.meridiem && parsedParts));\n\t\n\t        if (m._strict) {\n\t            isNowValid = isNowValid &&\n\t                flags.charsLeftOver === 0 &&\n\t                flags.unusedTokens.length === 0 &&\n\t                flags.bigHour === undefined;\n\t        }\n\t\n\t        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t            m._isValid = isNowValid;\n\t        }\n\t        else {\n\t            return isNowValid;\n\t        }\n\t    }\n\t    return m._isValid;\n\t}\n\t\n\tfunction createInvalid (flags) {\n\t    var m = createUTC(NaN);\n\t    if (flags != null) {\n\t        extend(getParsingFlags(m), flags);\n\t    }\n\t    else {\n\t        getParsingFlags(m).userInvalidated = true;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// Plugins that add properties should also add the key here (null value),\n\t// so we can properly clone ourselves.\n\tvar momentProperties = hooks.momentProperties = [];\n\t\n\tfunction copyConfig(to, from) {\n\t    var i, prop, val;\n\t\n\t    if (!isUndefined(from._isAMomentObject)) {\n\t        to._isAMomentObject = from._isAMomentObject;\n\t    }\n\t    if (!isUndefined(from._i)) {\n\t        to._i = from._i;\n\t    }\n\t    if (!isUndefined(from._f)) {\n\t        to._f = from._f;\n\t    }\n\t    if (!isUndefined(from._l)) {\n\t        to._l = from._l;\n\t    }\n\t    if (!isUndefined(from._strict)) {\n\t        to._strict = from._strict;\n\t    }\n\t    if (!isUndefined(from._tzm)) {\n\t        to._tzm = from._tzm;\n\t    }\n\t    if (!isUndefined(from._isUTC)) {\n\t        to._isUTC = from._isUTC;\n\t    }\n\t    if (!isUndefined(from._offset)) {\n\t        to._offset = from._offset;\n\t    }\n\t    if (!isUndefined(from._pf)) {\n\t        to._pf = getParsingFlags(from);\n\t    }\n\t    if (!isUndefined(from._locale)) {\n\t        to._locale = from._locale;\n\t    }\n\t\n\t    if (momentProperties.length > 0) {\n\t        for (i = 0; i < momentProperties.length; i++) {\n\t            prop = momentProperties[i];\n\t            val = from[prop];\n\t            if (!isUndefined(val)) {\n\t                to[prop] = val;\n\t            }\n\t        }\n\t    }\n\t\n\t    return to;\n\t}\n\t\n\tvar updateInProgress = false;\n\t\n\t// Moment prototype object\n\tfunction Moment(config) {\n\t    copyConfig(this, config);\n\t    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t    if (!this.isValid()) {\n\t        this._d = new Date(NaN);\n\t    }\n\t    // Prevent infinite loop in case updateOffset creates new moment\n\t    // objects.\n\t    if (updateInProgress === false) {\n\t        updateInProgress = true;\n\t        hooks.updateOffset(this);\n\t        updateInProgress = false;\n\t    }\n\t}\n\t\n\tfunction isMoment (obj) {\n\t    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t}\n\t\n\tfunction absFloor (number) {\n\t    if (number < 0) {\n\t        // -0 -> 0\n\t        return Math.ceil(number) || 0;\n\t    } else {\n\t        return Math.floor(number);\n\t    }\n\t}\n\t\n\tfunction toInt(argumentForCoercion) {\n\t    var coercedNumber = +argumentForCoercion,\n\t        value = 0;\n\t\n\t    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t        value = absFloor(coercedNumber);\n\t    }\n\t\n\t    return value;\n\t}\n\t\n\t// compare two arrays, return the number of differences\n\tfunction compareArrays(array1, array2, dontConvert) {\n\t    var len = Math.min(array1.length, array2.length),\n\t        lengthDiff = Math.abs(array1.length - array2.length),\n\t        diffs = 0,\n\t        i;\n\t    for (i = 0; i < len; i++) {\n\t        if ((dontConvert && array1[i] !== array2[i]) ||\n\t            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t            diffs++;\n\t        }\n\t    }\n\t    return diffs + lengthDiff;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (hooks.suppressDeprecationWarnings === false &&\n\t            (typeof console !==  'undefined') && console.warn) {\n\t        console.warn('Deprecation warning: ' + msg);\n\t    }\n\t}\n\t\n\tfunction deprecate(msg, fn) {\n\t    var firstTime = true;\n\t\n\t    return extend(function () {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(null, msg);\n\t        }\n\t        if (firstTime) {\n\t            var args = [];\n\t            var arg;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                arg = '';\n\t                if (typeof arguments[i] === 'object') {\n\t                    arg += '\\n[' + i + '] ';\n\t                    for (var key in arguments[0]) {\n\t                        arg += key + ': ' + arguments[0][key] + ', ';\n\t                    }\n\t                    arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                } else {\n\t                    arg = arguments[i];\n\t                }\n\t                args.push(arg);\n\t            }\n\t            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n\t            firstTime = false;\n\t        }\n\t        return fn.apply(this, arguments);\n\t    }, fn);\n\t}\n\t\n\tvar deprecations = {};\n\t\n\tfunction deprecateSimple(name, msg) {\n\t    if (hooks.deprecationHandler != null) {\n\t        hooks.deprecationHandler(name, msg);\n\t    }\n\t    if (!deprecations[name]) {\n\t        warn(msg);\n\t        deprecations[name] = true;\n\t    }\n\t}\n\t\n\thooks.suppressDeprecationWarnings = false;\n\thooks.deprecationHandler = null;\n\t\n\tfunction isFunction(input) {\n\t    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t}\n\t\n\tfunction set (config) {\n\t    var prop, i;\n\t    for (i in config) {\n\t        prop = config[i];\n\t        if (isFunction(prop)) {\n\t            this[i] = prop;\n\t        } else {\n\t            this['_' + i] = prop;\n\t        }\n\t    }\n\t    this._config = config;\n\t    // Lenient ordinal parsing accepts just a number in addition to\n\t    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    this._dayOfMonthOrdinalParseLenient = new RegExp(\n\t        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n\t            '|' + (/\\d{1,2}/).source);\n\t}\n\t\n\tfunction mergeConfigs(parentConfig, childConfig) {\n\t    var res = extend({}, parentConfig), prop;\n\t    for (prop in childConfig) {\n\t        if (hasOwnProp(childConfig, prop)) {\n\t            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                res[prop] = {};\n\t                extend(res[prop], parentConfig[prop]);\n\t                extend(res[prop], childConfig[prop]);\n\t            } else if (childConfig[prop] != null) {\n\t                res[prop] = childConfig[prop];\n\t            } else {\n\t                delete res[prop];\n\t            }\n\t        }\n\t    }\n\t    for (prop in parentConfig) {\n\t        if (hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])) {\n\t            // make sure changes to properties don't modify parent config\n\t            res[prop] = extend({}, res[prop]);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction Locale(config) {\n\t    if (config != null) {\n\t        this.set(config);\n\t    }\n\t}\n\t\n\tvar keys;\n\t\n\tif (Object.keys) {\n\t    keys = Object.keys;\n\t} else {\n\t    keys = function (obj) {\n\t        var i, res = [];\n\t        for (i in obj) {\n\t            if (hasOwnProp(obj, i)) {\n\t                res.push(i);\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t}\n\t\n\tvar keys$1 = keys;\n\t\n\tvar defaultCalendar = {\n\t    sameDay : '[Today at] LT',\n\t    nextDay : '[Tomorrow at] LT',\n\t    nextWeek : 'dddd [at] LT',\n\t    lastDay : '[Yesterday at] LT',\n\t    lastWeek : '[Last] dddd [at] LT',\n\t    sameElse : 'L'\n\t};\n\t\n\tfunction calendar (key, mom, now) {\n\t    var output = this._calendar[key] || this._calendar['sameElse'];\n\t    return isFunction(output) ? output.call(mom, now) : output;\n\t}\n\t\n\tvar defaultLongDateFormat = {\n\t    LTS  : 'h:mm:ss A',\n\t    LT   : 'h:mm A',\n\t    L    : 'MM/DD/YYYY',\n\t    LL   : 'MMMM D, YYYY',\n\t    LLL  : 'MMMM D, YYYY h:mm A',\n\t    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t};\n\t\n\tfunction longDateFormat (key) {\n\t    var format = this._longDateFormat[key],\n\t        formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t    if (format || !formatUpper) {\n\t        return format;\n\t    }\n\t\n\t    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t        return val.slice(1);\n\t    });\n\t\n\t    return this._longDateFormat[key];\n\t}\n\t\n\tvar defaultInvalidDate = 'Invalid date';\n\t\n\tfunction invalidDate () {\n\t    return this._invalidDate;\n\t}\n\t\n\tvar defaultOrdinal = '%d';\n\tvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\t\n\tfunction ordinal (number) {\n\t    return this._ordinal.replace('%d', number);\n\t}\n\t\n\tvar defaultRelativeTime = {\n\t    future : 'in %s',\n\t    past   : '%s ago',\n\t    s  : 'a few seconds',\n\t    ss : '%d seconds',\n\t    m  : 'a minute',\n\t    mm : '%d minutes',\n\t    h  : 'an hour',\n\t    hh : '%d hours',\n\t    d  : 'a day',\n\t    dd : '%d days',\n\t    M  : 'a month',\n\t    MM : '%d months',\n\t    y  : 'a year',\n\t    yy : '%d years'\n\t};\n\t\n\tfunction relativeTime (number, withoutSuffix, string, isFuture) {\n\t    var output = this._relativeTime[string];\n\t    return (isFunction(output)) ?\n\t        output(number, withoutSuffix, string, isFuture) :\n\t        output.replace(/%d/i, number);\n\t}\n\t\n\tfunction pastFuture (diff, output) {\n\t    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t}\n\t\n\tvar aliases = {};\n\t\n\tfunction addUnitAlias (unit, shorthand) {\n\t    var lowerCase = unit.toLowerCase();\n\t    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t}\n\t\n\tfunction normalizeUnits(units) {\n\t    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t}\n\t\n\tfunction normalizeObjectUnits(inputObject) {\n\t    var normalizedInput = {},\n\t        normalizedProp,\n\t        prop;\n\t\n\t    for (prop in inputObject) {\n\t        if (hasOwnProp(inputObject, prop)) {\n\t            normalizedProp = normalizeUnits(prop);\n\t            if (normalizedProp) {\n\t                normalizedInput[normalizedProp] = inputObject[prop];\n\t            }\n\t        }\n\t    }\n\t\n\t    return normalizedInput;\n\t}\n\t\n\tvar priorities = {};\n\t\n\tfunction addUnitPriority(unit, priority) {\n\t    priorities[unit] = priority;\n\t}\n\t\n\tfunction getPrioritizedUnits(unitsObj) {\n\t    var units = [];\n\t    for (var u in unitsObj) {\n\t        units.push({unit: u, priority: priorities[u]});\n\t    }\n\t    units.sort(function (a, b) {\n\t        return a.priority - b.priority;\n\t    });\n\t    return units;\n\t}\n\t\n\tfunction makeGetSet (unit, keepTime) {\n\t    return function (value) {\n\t        if (value != null) {\n\t            set$1(this, unit, value);\n\t            hooks.updateOffset(this, keepTime);\n\t            return this;\n\t        } else {\n\t            return get(this, unit);\n\t        }\n\t    };\n\t}\n\t\n\tfunction get (mom, unit) {\n\t    return mom.isValid() ?\n\t        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t}\n\t\n\tfunction set$1 (mom, unit, value) {\n\t    if (mom.isValid()) {\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction stringGet (units) {\n\t    units = normalizeUnits(units);\n\t    if (isFunction(this[units])) {\n\t        return this[units]();\n\t    }\n\t    return this;\n\t}\n\t\n\t\n\tfunction stringSet (units, value) {\n\t    if (typeof units === 'object') {\n\t        units = normalizeObjectUnits(units);\n\t        var prioritized = getPrioritizedUnits(units);\n\t        for (var i = 0; i < prioritized.length; i++) {\n\t            this[prioritized[i].unit](units[prioritized[i].unit]);\n\t        }\n\t    } else {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units](value);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction zeroFill(number, targetLength, forceSign) {\n\t    var absNumber = '' + Math.abs(number),\n\t        zerosToFill = targetLength - absNumber.length,\n\t        sign = number >= 0;\n\t    return (sign ? (forceSign ? '+' : '') : '-') +\n\t        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t}\n\t\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\tvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\tvar formatFunctions = {};\n\t\n\tvar formatTokenFunctions = {};\n\t\n\t// token:    'M'\n\t// padded:   ['MM', 2]\n\t// ordinal:  'Mo'\n\t// callback: function () { this.month() + 1 }\n\tfunction addFormatToken (token, padded, ordinal, callback) {\n\t    var func = callback;\n\t    if (typeof callback === 'string') {\n\t        func = function () {\n\t            return this[callback]();\n\t        };\n\t    }\n\t    if (token) {\n\t        formatTokenFunctions[token] = func;\n\t    }\n\t    if (padded) {\n\t        formatTokenFunctions[padded[0]] = function () {\n\t            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t        };\n\t    }\n\t    if (ordinal) {\n\t        formatTokenFunctions[ordinal] = function () {\n\t            return this.localeData().ordinal(func.apply(this, arguments), token);\n\t        };\n\t    }\n\t}\n\t\n\tfunction removeFormattingTokens(input) {\n\t    if (input.match(/\\[[\\s\\S]/)) {\n\t        return input.replace(/^\\[|\\]$/g, '');\n\t    }\n\t    return input.replace(/\\\\/g, '');\n\t}\n\t\n\tfunction makeFormatFunction(format) {\n\t    var array = format.match(formattingTokens), i, length;\n\t\n\t    for (i = 0, length = array.length; i < length; i++) {\n\t        if (formatTokenFunctions[array[i]]) {\n\t            array[i] = formatTokenFunctions[array[i]];\n\t        } else {\n\t            array[i] = removeFormattingTokens(array[i]);\n\t        }\n\t    }\n\t\n\t    return function (mom) {\n\t        var output = '', i;\n\t        for (i = 0; i < length; i++) {\n\t            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n\t        }\n\t        return output;\n\t    };\n\t}\n\t\n\t// format date using native date object\n\tfunction formatMoment(m, format) {\n\t    if (!m.isValid()) {\n\t        return m.localeData().invalidDate();\n\t    }\n\t\n\t    format = expandFormat(format, m.localeData());\n\t    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t    return formatFunctions[format](m);\n\t}\n\t\n\tfunction expandFormat(format, locale) {\n\t    var i = 5;\n\t\n\t    function replaceLongDateFormatTokens(input) {\n\t        return locale.longDateFormat(input) || input;\n\t    }\n\t\n\t    localFormattingTokens.lastIndex = 0;\n\t    while (i >= 0 && localFormattingTokens.test(format)) {\n\t        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t        localFormattingTokens.lastIndex = 0;\n\t        i -= 1;\n\t    }\n\t\n\t    return format;\n\t}\n\t\n\tvar match1         = /\\d/;            //       0 - 9\n\tvar match2         = /\\d\\d/;          //      00 - 99\n\tvar match3         = /\\d{3}/;         //     000 - 999\n\tvar match4         = /\\d{4}/;         //    0000 - 9999\n\tvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\tvar match1to2      = /\\d\\d?/;         //       0 - 99\n\tvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\tvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\tvar match1to3      = /\\d{1,3}/;       //       0 - 999\n\tvar match1to4      = /\\d{1,4}/;       //       0 - 9999\n\tvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\tvar matchUnsigned  = /\\d+/;           //       0 - inf\n\tvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\tvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\tvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\tvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t// any word (or two) characters or numbers including two/three word month in arabic.\n\t// includes scottish gaelic two word and hyphenated months\n\tvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\tvar regexes = {};\n\t\n\tfunction addRegexToken (token, regex, strictRegex) {\n\t    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t        return (isStrict && strictRegex) ? strictRegex : regex;\n\t    };\n\t}\n\t\n\tfunction getParseRegexForToken (token, config) {\n\t    if (!hasOwnProp(regexes, token)) {\n\t        return new RegExp(unescapeFormat(token));\n\t    }\n\t\n\t    return regexes[token](config._strict, config._locale);\n\t}\n\t\n\t// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\tfunction unescapeFormat(s) {\n\t    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t        return p1 || p2 || p3 || p4;\n\t    }));\n\t}\n\t\n\tfunction regexEscape(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t}\n\t\n\tvar tokens = {};\n\t\n\tfunction addParseToken (token, callback) {\n\t    var i, func = callback;\n\t    if (typeof token === 'string') {\n\t        token = [token];\n\t    }\n\t    if (isNumber(callback)) {\n\t        func = function (input, array) {\n\t            array[callback] = toInt(input);\n\t        };\n\t    }\n\t    for (i = 0; i < token.length; i++) {\n\t        tokens[token[i]] = func;\n\t    }\n\t}\n\t\n\tfunction addWeekParseToken (token, callback) {\n\t    addParseToken(token, function (input, array, config, token) {\n\t        config._w = config._w || {};\n\t        callback(input, config._w, config, token);\n\t    });\n\t}\n\t\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t    if (input != null && hasOwnProp(tokens, token)) {\n\t        tokens[token](input, config._a, config, token);\n\t    }\n\t}\n\t\n\tvar YEAR = 0;\n\tvar MONTH = 1;\n\tvar DATE = 2;\n\tvar HOUR = 3;\n\tvar MINUTE = 4;\n\tvar SECOND = 5;\n\tvar MILLISECOND = 6;\n\tvar WEEK = 7;\n\tvar WEEKDAY = 8;\n\t\n\tvar indexOf;\n\t\n\tif (Array.prototype.indexOf) {\n\t    indexOf = Array.prototype.indexOf;\n\t} else {\n\t    indexOf = function (o) {\n\t        // I know\n\t        var i;\n\t        for (i = 0; i < this.length; ++i) {\n\t            if (this[i] === o) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\tvar indexOf$1 = indexOf;\n\t\n\tfunction daysInMonth(year, month) {\n\t    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('M', ['MM', 2], 'Mo', function () {\n\t    return this.month() + 1;\n\t});\n\t\n\taddFormatToken('MMM', 0, 0, function (format) {\n\t    return this.localeData().monthsShort(this, format);\n\t});\n\t\n\taddFormatToken('MMMM', 0, 0, function (format) {\n\t    return this.localeData().months(this, format);\n\t});\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('month', 'M');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('month', 8);\n\t\n\t// PARSING\n\t\n\taddRegexToken('M',    match1to2);\n\taddRegexToken('MM',   match1to2, match2);\n\taddRegexToken('MMM',  function (isStrict, locale) {\n\t    return locale.monthsShortRegex(isStrict);\n\t});\n\taddRegexToken('MMMM', function (isStrict, locale) {\n\t    return locale.monthsRegex(isStrict);\n\t});\n\t\n\taddParseToken(['M', 'MM'], function (input, array) {\n\t    array[MONTH] = toInt(input) - 1;\n\t});\n\t\n\taddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t    var month = config._locale.monthsParse(input, token, config._strict);\n\t    // if we didn't find a month name, mark the date as invalid.\n\t    if (month != null) {\n\t        array[MONTH] = month;\n\t    } else {\n\t        getParsingFlags(config).invalidMonth = input;\n\t    }\n\t});\n\t\n\t// LOCALES\n\t\n\tvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\tvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\tfunction localeMonths (m, format) {\n\t    if (!m) {\n\t        return isArray(this._months) ? this._months :\n\t            this._months['standalone'];\n\t    }\n\t    return isArray(this._months) ? this._months[m.month()] :\n\t        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\tfunction localeMonthsShort (m, format) {\n\t    if (!m) {\n\t        return isArray(this._monthsShort) ? this._monthsShort :\n\t            this._monthsShort['standalone'];\n\t    }\n\t    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tfunction handleStrictParse(monthName, format, strict) {\n\t    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n\t    if (!this._monthsParse) {\n\t        // this is not used\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t        for (i = 0; i < 12; ++i) {\n\t            mom = createUTC([2000, i]);\n\t            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n\t            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeMonthsParse (monthName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._monthsParseExact) {\n\t        return handleStrictParse.call(this, monthName, format, strict);\n\t    }\n\t\n\t    if (!this._monthsParse) {\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t    }\n\t\n\t    // TODO: add sorting\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another\n\t    // see sorting in computeMonthsParse\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        if (strict && !this._longMonthsParse[i]) {\n\t            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t        }\n\t        if (!strict && !this._monthsParse[i]) {\n\t            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction setMonth (mom, value) {\n\t    var dayOfMonth;\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return mom;\n\t    }\n\t\n\t    if (typeof value === 'string') {\n\t        if (/^\\d+$/.test(value)) {\n\t            value = toInt(value);\n\t        } else {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (!isNumber(value)) {\n\t                return mom;\n\t            }\n\t        }\n\t    }\n\t\n\t    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t    return mom;\n\t}\n\t\n\tfunction getSetMonth (value) {\n\t    if (value != null) {\n\t        setMonth(this, value);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    } else {\n\t        return get(this, 'Month');\n\t    }\n\t}\n\t\n\tfunction getDaysInMonth () {\n\t    return daysInMonth(this.year(), this.month());\n\t}\n\t\n\tvar defaultMonthsShortRegex = matchWord;\n\tfunction monthsShortRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsShortStrictRegex;\n\t        } else {\n\t            return this._monthsShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t            this._monthsShortRegex = defaultMonthsShortRegex;\n\t        }\n\t        return this._monthsShortStrictRegex && isStrict ?\n\t            this._monthsShortStrictRegex : this._monthsShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultMonthsRegex = matchWord;\n\tfunction monthsRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsStrictRegex;\n\t        } else {\n\t            return this._monthsRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            this._monthsRegex = defaultMonthsRegex;\n\t        }\n\t        return this._monthsStrictRegex && isStrict ?\n\t            this._monthsStrictRegex : this._monthsRegex;\n\t    }\n\t}\n\t\n\tfunction computeMonthsParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom;\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        shortPieces.push(this.monthsShort(mom, ''));\n\t        longPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.monthsShort(mom, ''));\n\t    }\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 12; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t    }\n\t    for (i = 0; i < 24; i++) {\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._monthsShortRegex = this._monthsRegex;\n\t    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Y', 0, 0, function () {\n\t    var y = this.year();\n\t    return y <= 9999 ? '' + y : '+' + y;\n\t});\n\t\n\taddFormatToken(0, ['YY', 2], 0, function () {\n\t    return this.year() % 100;\n\t});\n\t\n\taddFormatToken(0, ['YYYY',   4],       0, 'year');\n\taddFormatToken(0, ['YYYYY',  5],       0, 'year');\n\taddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('year', 'y');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('year', 1);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Y',      matchSigned);\n\taddRegexToken('YY',     match1to2, match2);\n\taddRegexToken('YYYY',   match1to4, match4);\n\taddRegexToken('YYYYY',  match1to6, match6);\n\taddRegexToken('YYYYYY', match1to6, match6);\n\t\n\taddParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\taddParseToken('YYYY', function (input, array) {\n\t    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t});\n\taddParseToken('YY', function (input, array) {\n\t    array[YEAR] = hooks.parseTwoDigitYear(input);\n\t});\n\taddParseToken('Y', function (input, array) {\n\t    array[YEAR] = parseInt(input, 10);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction daysInYear(year) {\n\t    return isLeapYear(year) ? 366 : 365;\n\t}\n\t\n\tfunction isLeapYear(year) {\n\t    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t}\n\t\n\t// HOOKS\n\t\n\thooks.parseTwoDigitYear = function (input) {\n\t    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t};\n\t\n\t// MOMENTS\n\t\n\tvar getSetYear = makeGetSet('FullYear', true);\n\t\n\tfunction getIsLeapYear () {\n\t    return isLeapYear(this.year());\n\t}\n\t\n\tfunction createDate (y, m, d, h, M, s, ms) {\n\t    // can't just apply() to create a date:\n\t    // https://stackoverflow.com/q/181348\n\t    var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t    // the date constructor remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t        date.setFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\tfunction createUTCDate (y) {\n\t    var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t    // the Date.UTC function remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t        date.setUTCFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\t// start-of-first-week - start-of-year\n\tfunction firstWeekOffset(year, dow, doy) {\n\t    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t        fwd = 7 + dow - doy,\n\t        // first-week day local weekday -- which local weekday is fwd\n\t        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t    return -fwdlw + fwd - 1;\n\t}\n\t\n\t// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\tfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t    var localWeekday = (7 + weekday - dow) % 7,\n\t        weekOffset = firstWeekOffset(year, dow, doy),\n\t        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t        resYear, resDayOfYear;\n\t\n\t    if (dayOfYear <= 0) {\n\t        resYear = year - 1;\n\t        resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t    } else if (dayOfYear > daysInYear(year)) {\n\t        resYear = year + 1;\n\t        resDayOfYear = dayOfYear - daysInYear(year);\n\t    } else {\n\t        resYear = year;\n\t        resDayOfYear = dayOfYear;\n\t    }\n\t\n\t    return {\n\t        year: resYear,\n\t        dayOfYear: resDayOfYear\n\t    };\n\t}\n\t\n\tfunction weekOfYear(mom, dow, doy) {\n\t    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t        resWeek, resYear;\n\t\n\t    if (week < 1) {\n\t        resYear = mom.year() - 1;\n\t        resWeek = week + weeksInYear(resYear, dow, doy);\n\t    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t        resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t        resYear = mom.year() + 1;\n\t    } else {\n\t        resYear = mom.year();\n\t        resWeek = week;\n\t    }\n\t\n\t    return {\n\t        week: resWeek,\n\t        year: resYear\n\t    };\n\t}\n\t\n\tfunction weeksInYear(year, dow, doy) {\n\t    var weekOffset = firstWeekOffset(year, dow, doy),\n\t        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('w', ['ww', 2], 'wo', 'week');\n\taddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('week', 'w');\n\taddUnitAlias('isoWeek', 'W');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('week', 5);\n\taddUnitPriority('isoWeek', 5);\n\t\n\t// PARSING\n\t\n\taddRegexToken('w',  match1to2);\n\taddRegexToken('ww', match1to2, match2);\n\taddRegexToken('W',  match1to2);\n\taddRegexToken('WW', match1to2, match2);\n\t\n\taddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t    week[token.substr(0, 1)] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// LOCALES\n\t\n\tfunction localeWeek (mom) {\n\t    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t}\n\t\n\tvar defaultLocaleWeek = {\n\t    dow : 0, // Sunday is the first day of the week.\n\t    doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t};\n\t\n\tfunction localeFirstDayOfWeek () {\n\t    return this._week.dow;\n\t}\n\t\n\tfunction localeFirstDayOfYear () {\n\t    return this._week.doy;\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeek (input) {\n\t    var week = this.localeData().week(this);\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\tfunction getSetISOWeek (input) {\n\t    var week = weekOfYear(this, 1, 4).week;\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('d', 0, 'do', 'day');\n\t\n\taddFormatToken('dd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysMin(this, format);\n\t});\n\t\n\taddFormatToken('ddd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysShort(this, format);\n\t});\n\t\n\taddFormatToken('dddd', 0, 0, function (format) {\n\t    return this.localeData().weekdays(this, format);\n\t});\n\t\n\taddFormatToken('e', 0, 0, 'weekday');\n\taddFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('day', 'd');\n\taddUnitAlias('weekday', 'e');\n\taddUnitAlias('isoWeekday', 'E');\n\t\n\t// PRIORITY\n\taddUnitPriority('day', 11);\n\taddUnitPriority('weekday', 11);\n\taddUnitPriority('isoWeekday', 11);\n\t\n\t// PARSING\n\t\n\taddRegexToken('d',    match1to2);\n\taddRegexToken('e',    match1to2);\n\taddRegexToken('E',    match1to2);\n\taddRegexToken('dd',   function (isStrict, locale) {\n\t    return locale.weekdaysMinRegex(isStrict);\n\t});\n\taddRegexToken('ddd',   function (isStrict, locale) {\n\t    return locale.weekdaysShortRegex(isStrict);\n\t});\n\taddRegexToken('dddd',   function (isStrict, locale) {\n\t    return locale.weekdaysRegex(isStrict);\n\t});\n\t\n\taddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t    // if we didn't get a weekday name, mark the date as invalid\n\t    if (weekday != null) {\n\t        week.d = weekday;\n\t    } else {\n\t        getParsingFlags(config).invalidWeekday = input;\n\t    }\n\t});\n\t\n\taddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t    week[token] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction parseWeekday(input, locale) {\n\t    if (typeof input !== 'string') {\n\t        return input;\n\t    }\n\t\n\t    if (!isNaN(input)) {\n\t        return parseInt(input, 10);\n\t    }\n\t\n\t    input = locale.weekdaysParse(input);\n\t    if (typeof input === 'number') {\n\t        return input;\n\t    }\n\t\n\t    return null;\n\t}\n\t\n\tfunction parseIsoWeekday(input, locale) {\n\t    if (typeof input === 'string') {\n\t        return locale.weekdaysParse(input) % 7 || 7;\n\t    }\n\t    return isNaN(input) ? null : input;\n\t}\n\t\n\t// LOCALES\n\t\n\tvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\tfunction localeWeekdays (m, format) {\n\t    if (!m) {\n\t        return isArray(this._weekdays) ? this._weekdays :\n\t            this._weekdays['standalone'];\n\t    }\n\t    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t}\n\t\n\tvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\tfunction localeWeekdaysShort (m) {\n\t    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n\t}\n\t\n\tvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\tfunction localeWeekdaysMin (m) {\n\t    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n\t}\n\t\n\tfunction handleStrictParse$1(weekdayName, format, strict) {\n\t    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t\n\t        for (i = 0; i < 7; ++i) {\n\t            mom = createUTC([2000, 1]).day(i);\n\t            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n\t            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n\t            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeWeekdaysParse (weekdayName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._weekdaysParseExact) {\n\t        return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t    }\n\t\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._fullWeekdaysParse = [];\n\t    }\n\t\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t\n\t        mom = createUTC([2000, 1]).day(i);\n\t        if (strict && !this._fullWeekdaysParse[i]) {\n\t            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t        }\n\t        if (!this._weekdaysParse[i]) {\n\t            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t    if (input != null) {\n\t        input = parseWeekday(input, this.localeData());\n\t        return this.add(input - day, 'd');\n\t    } else {\n\t        return day;\n\t    }\n\t}\n\t\n\tfunction getSetLocaleDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t    return input == null ? weekday : this.add(input - weekday, 'd');\n\t}\n\t\n\tfunction getSetISODayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t\n\t    // behaves the same as moment#day except\n\t    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t    // as a setter, sunday should belong to the previous week.\n\t\n\t    if (input != null) {\n\t        var weekday = parseIsoWeekday(input, this.localeData());\n\t        return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t    } else {\n\t        return this.day() || 7;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysRegex = matchWord;\n\tfunction weekdaysRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysStrictRegex;\n\t        } else {\n\t            return this._weekdaysRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            this._weekdaysRegex = defaultWeekdaysRegex;\n\t        }\n\t        return this._weekdaysStrictRegex && isStrict ?\n\t            this._weekdaysStrictRegex : this._weekdaysRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysShortRegex = matchWord;\n\tfunction weekdaysShortRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysShortStrictRegex;\n\t        } else {\n\t            return this._weekdaysShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t        }\n\t        return this._weekdaysShortStrictRegex && isStrict ?\n\t            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysMinRegex = matchWord;\n\tfunction weekdaysMinRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysMinStrictRegex;\n\t        } else {\n\t            return this._weekdaysMinRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t        }\n\t        return this._weekdaysMinStrictRegex && isStrict ?\n\t            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n\t    }\n\t}\n\t\n\t\n\tfunction computeWeekdaysParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom, minp, shortp, longp;\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, 1]).day(i);\n\t        minp = this.weekdaysMin(mom, '');\n\t        shortp = this.weekdaysShort(mom, '');\n\t        longp = this.weekdays(mom, '');\n\t        minPieces.push(minp);\n\t        shortPieces.push(shortp);\n\t        longPieces.push(longp);\n\t        mixedPieces.push(minp);\n\t        mixedPieces.push(shortp);\n\t        mixedPieces.push(longp);\n\t    }\n\t    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    minPieces.sort(cmpLenRev);\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 7; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortRegex = this._weekdaysRegex;\n\t    this._weekdaysMinRegex = this._weekdaysRegex;\n\t\n\t    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction hFormat() {\n\t    return this.hours() % 12 || 12;\n\t}\n\t\n\tfunction kFormat() {\n\t    return this.hours() || 24;\n\t}\n\t\n\taddFormatToken('H', ['HH', 2], 0, 'hour');\n\taddFormatToken('h', ['hh', 2], 0, hFormat);\n\taddFormatToken('k', ['kk', 2], 0, kFormat);\n\t\n\taddFormatToken('hmm', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('hmmss', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\taddFormatToken('Hmm', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('Hmmss', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\tfunction meridiem (token, lowercase) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t    });\n\t}\n\t\n\tmeridiem('a', true);\n\tmeridiem('A', false);\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('hour', 'h');\n\t\n\t// PRIORITY\n\taddUnitPriority('hour', 13);\n\t\n\t// PARSING\n\t\n\tfunction matchMeridiem (isStrict, locale) {\n\t    return locale._meridiemParse;\n\t}\n\t\n\taddRegexToken('a',  matchMeridiem);\n\taddRegexToken('A',  matchMeridiem);\n\taddRegexToken('H',  match1to2);\n\taddRegexToken('h',  match1to2);\n\taddRegexToken('k',  match1to2);\n\taddRegexToken('HH', match1to2, match2);\n\taddRegexToken('hh', match1to2, match2);\n\taddRegexToken('kk', match1to2, match2);\n\t\n\taddRegexToken('hmm', match3to4);\n\taddRegexToken('hmmss', match5to6);\n\taddRegexToken('Hmm', match3to4);\n\taddRegexToken('Hmmss', match5to6);\n\t\n\taddParseToken(['H', 'HH'], HOUR);\n\taddParseToken(['k', 'kk'], function (input, array, config) {\n\t    var kInput = toInt(input);\n\t    array[HOUR] = kInput === 24 ? 0 : kInput;\n\t});\n\taddParseToken(['a', 'A'], function (input, array, config) {\n\t    config._isPm = config._locale.isPM(input);\n\t    config._meridiem = input;\n\t});\n\taddParseToken(['h', 'hh'], function (input, array, config) {\n\t    array[HOUR] = toInt(input);\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('Hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t});\n\taddParseToken('Hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t});\n\t\n\t// LOCALES\n\t\n\tfunction localeIsPM (input) {\n\t    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t    // Using charAt should be more compatible.\n\t    return ((input + '').toLowerCase().charAt(0) === 'p');\n\t}\n\t\n\tvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\tfunction localeMeridiem (hours, minutes, isLower) {\n\t    if (hours > 11) {\n\t        return isLower ? 'pm' : 'PM';\n\t    } else {\n\t        return isLower ? 'am' : 'AM';\n\t    }\n\t}\n\t\n\t\n\t// MOMENTS\n\t\n\t// Setting the hour should keep the time, because the user explicitly\n\t// specified which hour he wants. So trying to maintain the same hour (in\n\t// a new timezone) makes sense. Adding/subtracting hours does not follow\n\t// this rule.\n\tvar getSetHour = makeGetSet('Hours', true);\n\t\n\t// months\n\t// week\n\t// weekdays\n\t// meridiem\n\tvar baseConfig = {\n\t    calendar: defaultCalendar,\n\t    longDateFormat: defaultLongDateFormat,\n\t    invalidDate: defaultInvalidDate,\n\t    ordinal: defaultOrdinal,\n\t    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n\t    relativeTime: defaultRelativeTime,\n\t\n\t    months: defaultLocaleMonths,\n\t    monthsShort: defaultLocaleMonthsShort,\n\t\n\t    week: defaultLocaleWeek,\n\t\n\t    weekdays: defaultLocaleWeekdays,\n\t    weekdaysMin: defaultLocaleWeekdaysMin,\n\t    weekdaysShort: defaultLocaleWeekdaysShort,\n\t\n\t    meridiemParse: defaultLocaleMeridiemParse\n\t};\n\t\n\t// internal storage for locale config files\n\tvar locales = {};\n\tvar localeFamilies = {};\n\tvar globalLocale;\n\t\n\tfunction normalizeLocale(key) {\n\t    return key ? key.toLowerCase().replace('_', '-') : key;\n\t}\n\t\n\t// pick the locale from the array\n\t// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\tfunction chooseLocale(names) {\n\t    var i = 0, j, next, locale, split;\n\t\n\t    while (i < names.length) {\n\t        split = normalizeLocale(names[i]).split('-');\n\t        j = split.length;\n\t        next = normalizeLocale(names[i + 1]);\n\t        next = next ? next.split('-') : null;\n\t        while (j > 0) {\n\t            locale = loadLocale(split.slice(0, j).join('-'));\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                //the next array item is better than a shallower substring of this one\n\t                break;\n\t            }\n\t            j--;\n\t        }\n\t        i++;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction loadLocale(name) {\n\t    var oldLocale = null;\n\t    // TODO: Find a better way to register and load all the locales in Node\n\t    if (!locales[name] && (typeof module !== 'undefined') &&\n\t            module && module.exports) {\n\t        try {\n\t            oldLocale = globalLocale._abbr;\n\t            !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\t            // because defineLocale currently also sets the global locale, we\n\t            // want to undo that for lazy loaded locales\n\t            getSetGlobalLocale(oldLocale);\n\t        } catch (e) { }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// This function will load locale and then set the global locale.  If\n\t// no arguments are passed in, it will simply return the current global\n\t// locale key.\n\tfunction getSetGlobalLocale (key, values) {\n\t    var data;\n\t    if (key) {\n\t        if (isUndefined(values)) {\n\t            data = getLocale(key);\n\t        }\n\t        else {\n\t            data = defineLocale(key, values);\n\t        }\n\t\n\t        if (data) {\n\t            // moment.duration._locale = moment._locale = data;\n\t            globalLocale = data;\n\t        }\n\t    }\n\t\n\t    return globalLocale._abbr;\n\t}\n\t\n\tfunction defineLocale (name, config) {\n\t    if (config !== null) {\n\t        var parentConfig = baseConfig;\n\t        config.abbr = name;\n\t        if (locales[name] != null) {\n\t            deprecateSimple('defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                    'an existing locale. moment.defineLocale(localeName, ' +\n\t                    'config) should only be used for creating a new locale ' +\n\t                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n\t            parentConfig = locales[name]._config;\n\t        } else if (config.parentLocale != null) {\n\t            if (locales[config.parentLocale] != null) {\n\t                parentConfig = locales[config.parentLocale]._config;\n\t            } else {\n\t                if (!localeFamilies[config.parentLocale]) {\n\t                    localeFamilies[config.parentLocale] = [];\n\t                }\n\t                localeFamilies[config.parentLocale].push({\n\t                    name: name,\n\t                    config: config\n\t                });\n\t                return null;\n\t            }\n\t        }\n\t        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\t\n\t        if (localeFamilies[name]) {\n\t            localeFamilies[name].forEach(function (x) {\n\t                defineLocale(x.name, x.config);\n\t            });\n\t        }\n\t\n\t        // backwards compat for now: also set the locale\n\t        // make sure we set the locale AFTER all child locales have been\n\t        // created, so we won't end up with the child locale set.\n\t        getSetGlobalLocale(name);\n\t\n\t\n\t        return locales[name];\n\t    } else {\n\t        // useful for testing\n\t        delete locales[name];\n\t        return null;\n\t    }\n\t}\n\t\n\tfunction updateLocale(name, config) {\n\t    if (config != null) {\n\t        var locale, parentConfig = baseConfig;\n\t        // MERGE\n\t        if (locales[name] != null) {\n\t            parentConfig = locales[name]._config;\n\t        }\n\t        config = mergeConfigs(parentConfig, config);\n\t        locale = new Locale(config);\n\t        locale.parentLocale = locales[name];\n\t        locales[name] = locale;\n\t\n\t        // backwards compat for now: also set the locale\n\t        getSetGlobalLocale(name);\n\t    } else {\n\t        // pass null for config to unupdate, useful for tests\n\t        if (locales[name] != null) {\n\t            if (locales[name].parentLocale != null) {\n\t                locales[name] = locales[name].parentLocale;\n\t            } else if (locales[name] != null) {\n\t                delete locales[name];\n\t            }\n\t        }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// returns locale data\n\tfunction getLocale (key) {\n\t    var locale;\n\t\n\t    if (key && key._locale && key._locale._abbr) {\n\t        key = key._locale._abbr;\n\t    }\n\t\n\t    if (!key) {\n\t        return globalLocale;\n\t    }\n\t\n\t    if (!isArray(key)) {\n\t        //short-circuit everything else\n\t        locale = loadLocale(key);\n\t        if (locale) {\n\t            return locale;\n\t        }\n\t        key = [key];\n\t    }\n\t\n\t    return chooseLocale(key);\n\t}\n\t\n\tfunction listLocales() {\n\t    return keys$1(locales);\n\t}\n\t\n\tfunction checkOverflow (m) {\n\t    var overflow;\n\t    var a = m._a;\n\t\n\t    if (a && getParsingFlags(m).overflow === -2) {\n\t        overflow =\n\t            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t            -1;\n\t\n\t        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t            overflow = DATE;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t            overflow = WEEK;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t            overflow = WEEKDAY;\n\t        }\n\t\n\t        getParsingFlags(m).overflow = overflow;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// iso 8601 regex\n\t// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\tvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\tvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\tvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\tvar isoDates = [\n\t    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t    ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t    ['YYYYMMDD', /\\d{8}/],\n\t    // YYYYMM is NOT allowed by the standard\n\t    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t    ['YYYYDDD', /\\d{7}/]\n\t];\n\t\n\t// iso time formats and regexes\n\tvar isoTimes = [\n\t    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t    ['HH:mm', /\\d\\d:\\d\\d/],\n\t    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t    ['HHmm', /\\d\\d\\d\\d/],\n\t    ['HH', /\\d\\d/]\n\t];\n\t\n\tvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t// date from iso format\n\tfunction configFromISO(config) {\n\t    var i, l,\n\t        string = config._i,\n\t        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t        allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t    if (match) {\n\t        getParsingFlags(config).iso = true;\n\t\n\t        for (i = 0, l = isoDates.length; i < l; i++) {\n\t            if (isoDates[i][1].exec(match[1])) {\n\t                dateFormat = isoDates[i][0];\n\t                allowTime = isoDates[i][2] !== false;\n\t                break;\n\t            }\n\t        }\n\t        if (dateFormat == null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[3]) {\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(match[3])) {\n\t                    // match[2] should be 'T' or space\n\t                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (timeFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        if (!allowTime && timeFormat != null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[4]) {\n\t            if (tzRegex.exec(match[4])) {\n\t                tzFormat = 'Z';\n\t            } else {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t        configFromStringAndFormat(config);\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\tvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\t\n\t// date and time from ref 2822 format\n\tfunction configFromRFC2822(config) {\n\t    var string, match, dayFormat,\n\t        dateFormat, timeFormat, tzFormat;\n\t    var timezones = {\n\t        ' GMT': ' +0000',\n\t        ' EDT': ' -0400',\n\t        ' EST': ' -0500',\n\t        ' CDT': ' -0500',\n\t        ' CST': ' -0600',\n\t        ' MDT': ' -0600',\n\t        ' MST': ' -0700',\n\t        ' PDT': ' -0700',\n\t        ' PST': ' -0800'\n\t    };\n\t    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n\t    var timezone, timezoneIndex;\n\t\n\t    string = config._i\n\t        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n\t        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n\t        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n\t    match = basicRfcRegex.exec(string);\n\t\n\t    if (match) {\n\t        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n\t        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n\t        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\t\n\t        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\t        if (match[1]) { // day of week given\n\t            var momentDate = new Date(match[2]);\n\t            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\t\n\t            if (match[1].substr(0,3) !== momentDay) {\n\t                getParsingFlags(config).weekdayMismatch = true;\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t\n\t        switch (match[5].length) {\n\t            case 2: // military\n\t                if (timezoneIndex === 0) {\n\t                    timezone = ' +0000';\n\t                } else {\n\t                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n\t                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n\t                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n\t                }\n\t                break;\n\t            case 4: // Zone\n\t                timezone = timezones[match[5]];\n\t                break;\n\t            default: // UT or +/-9999\n\t                timezone = timezones[' GMT'];\n\t        }\n\t        match[5] = timezone;\n\t        config._i = match.splice(1).join('');\n\t        tzFormat = ' ZZ';\n\t        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n\t        configFromStringAndFormat(config);\n\t        getParsingFlags(config).rfc2822 = true;\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// date from iso format or fallback\n\tfunction configFromString(config) {\n\t    var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t    if (matched !== null) {\n\t        config._d = new Date(+matched[1]);\n\t        return;\n\t    }\n\t\n\t    configFromISO(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    configFromRFC2822(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    // Final attempt, use Input Fallback\n\t    hooks.createFromInputFallback(config);\n\t}\n\t\n\thooks.createFromInputFallback = deprecate(\n\t    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n\t    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n\t    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n\t    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t    function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    }\n\t);\n\t\n\t// Pick the first defined of two or three arguments.\n\tfunction defaults(a, b, c) {\n\t    if (a != null) {\n\t        return a;\n\t    }\n\t    if (b != null) {\n\t        return b;\n\t    }\n\t    return c;\n\t}\n\t\n\tfunction currentDateArray(config) {\n\t    // hooks is actually the exported moment object\n\t    var nowValue = new Date(hooks.now());\n\t    if (config._useUTC) {\n\t        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t    }\n\t    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t}\n\t\n\t// convert an array to a date.\n\t// the array should mirror the parameters below\n\t// note: all values past the year are optional and will default to the lowest possible value.\n\t// [year, month, day , hour, minute, second, millisecond]\n\tfunction configFromArray (config) {\n\t    var i, date, input = [], currentDate, yearToUse;\n\t\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    currentDate = currentDateArray(config);\n\t\n\t    //compute day of the year from weeks and weekdays\n\t    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t        dayOfYearFromWeekInfo(config);\n\t    }\n\t\n\t    //if the day of the year is set, figure out what it is\n\t    if (config._dayOfYear != null) {\n\t        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n\t            getParsingFlags(config)._overflowDayOfYear = true;\n\t        }\n\t\n\t        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t        config._a[MONTH] = date.getUTCMonth();\n\t        config._a[DATE] = date.getUTCDate();\n\t    }\n\t\n\t    // Default to current date.\n\t    // * if no year, month, day of month are given, default to today\n\t    // * if day of month is given, default month and year\n\t    // * if month is given, default only year\n\t    // * if year is given, don't default anything\n\t    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t        config._a[i] = input[i] = currentDate[i];\n\t    }\n\t\n\t    // Zero out whatever was not defaulted, including time\n\t    for (; i < 7; i++) {\n\t        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t    }\n\t\n\t    // Check for 24:00:00.000\n\t    if (config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0) {\n\t        config._nextDay = true;\n\t        config._a[HOUR] = 0;\n\t    }\n\t\n\t    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t    // Apply timezone offset from input. The actual utcOffset can be changed\n\t    // with parseZone.\n\t    if (config._tzm != null) {\n\t        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t    }\n\t\n\t    if (config._nextDay) {\n\t        config._a[HOUR] = 24;\n\t    }\n\t}\n\t\n\tfunction dayOfYearFromWeekInfo(config) {\n\t    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t    w = config._w;\n\t    if (w.GG != null || w.W != null || w.E != null) {\n\t        dow = 1;\n\t        doy = 4;\n\t\n\t        // TODO: We need to take the current isoWeekYear, but that depends on\n\t        // how we interpret now (local, utc, fixed offset). So create\n\t        // a now version of current config (take local/utc/offset flags, and\n\t        // create now).\n\t        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n\t        week = defaults(w.W, 1);\n\t        weekday = defaults(w.E, 1);\n\t        if (weekday < 1 || weekday > 7) {\n\t            weekdayOverflow = true;\n\t        }\n\t    } else {\n\t        dow = config._locale._week.dow;\n\t        doy = config._locale._week.doy;\n\t\n\t        var curWeek = weekOfYear(createLocal(), dow, doy);\n\t\n\t        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\t\n\t        // Default to current week.\n\t        week = defaults(w.w, curWeek.week);\n\t\n\t        if (w.d != null) {\n\t            // weekday -- low day numbers are considered next week\n\t            weekday = w.d;\n\t            if (weekday < 0 || weekday > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else if (w.e != null) {\n\t            // local weekday -- counting starts from begining of week\n\t            weekday = w.e + dow;\n\t            if (w.e < 0 || w.e > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            // default to begining of week\n\t            weekday = dow;\n\t        }\n\t    }\n\t    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t        getParsingFlags(config)._overflowWeeks = true;\n\t    } else if (weekdayOverflow != null) {\n\t        getParsingFlags(config)._overflowWeekday = true;\n\t    } else {\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t}\n\t\n\t// constant that refers to the ISO standard\n\thooks.ISO_8601 = function () {};\n\t\n\t// constant that refers to the RFC 2822 form\n\thooks.RFC_2822 = function () {};\n\t\n\t// date from string and format string\n\tfunction configFromStringAndFormat(config) {\n\t    // TODO: Move this to another part of the creation flow to prevent circular deps\n\t    if (config._f === hooks.ISO_8601) {\n\t        configFromISO(config);\n\t        return;\n\t    }\n\t    if (config._f === hooks.RFC_2822) {\n\t        configFromRFC2822(config);\n\t        return;\n\t    }\n\t    config._a = [];\n\t    getParsingFlags(config).empty = true;\n\t\n\t    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t    var string = '' + config._i,\n\t        i, parsedInput, tokens, token, skipped,\n\t        stringLength = string.length,\n\t        totalParsedInputLength = 0;\n\t\n\t    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t    for (i = 0; i < tokens.length; i++) {\n\t        token = tokens[i];\n\t        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t        // console.log('token', token, 'parsedInput', parsedInput,\n\t        //         'regex', getParseRegexForToken(token, config));\n\t        if (parsedInput) {\n\t            skipped = string.substr(0, string.indexOf(parsedInput));\n\t            if (skipped.length > 0) {\n\t                getParsingFlags(config).unusedInput.push(skipped);\n\t            }\n\t            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t            totalParsedInputLength += parsedInput.length;\n\t        }\n\t        // don't parse if it's not a known token\n\t        if (formatTokenFunctions[token]) {\n\t            if (parsedInput) {\n\t                getParsingFlags(config).empty = false;\n\t            }\n\t            else {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t            addTimeToArrayFromToken(token, parsedInput, config);\n\t        }\n\t        else if (config._strict && !parsedInput) {\n\t            getParsingFlags(config).unusedTokens.push(token);\n\t        }\n\t    }\n\t\n\t    // add remaining unparsed input length to the string\n\t    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t    if (string.length > 0) {\n\t        getParsingFlags(config).unusedInput.push(string);\n\t    }\n\t\n\t    // clear _12h flag if hour is <= 12\n\t    if (config._a[HOUR] <= 12 &&\n\t        getParsingFlags(config).bigHour === true &&\n\t        config._a[HOUR] > 0) {\n\t        getParsingFlags(config).bigHour = undefined;\n\t    }\n\t\n\t    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t    getParsingFlags(config).meridiem = config._meridiem;\n\t    // handle meridiem\n\t    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t    configFromArray(config);\n\t    checkOverflow(config);\n\t}\n\t\n\t\n\tfunction meridiemFixWrap (locale, hour, meridiem) {\n\t    var isPm;\n\t\n\t    if (meridiem == null) {\n\t        // nothing to do\n\t        return hour;\n\t    }\n\t    if (locale.meridiemHour != null) {\n\t        return locale.meridiemHour(hour, meridiem);\n\t    } else if (locale.isPM != null) {\n\t        // Fallback\n\t        isPm = locale.isPM(meridiem);\n\t        if (isPm && hour < 12) {\n\t            hour += 12;\n\t        }\n\t        if (!isPm && hour === 12) {\n\t            hour = 0;\n\t        }\n\t        return hour;\n\t    } else {\n\t        // this is not supposed to happen\n\t        return hour;\n\t    }\n\t}\n\t\n\t// date from string and array of format strings\n\tfunction configFromStringAndArray(config) {\n\t    var tempConfig,\n\t        bestMoment,\n\t\n\t        scoreToBeat,\n\t        i,\n\t        currentScore;\n\t\n\t    if (config._f.length === 0) {\n\t        getParsingFlags(config).invalidFormat = true;\n\t        config._d = new Date(NaN);\n\t        return;\n\t    }\n\t\n\t    for (i = 0; i < config._f.length; i++) {\n\t        currentScore = 0;\n\t        tempConfig = copyConfig({}, config);\n\t        if (config._useUTC != null) {\n\t            tempConfig._useUTC = config._useUTC;\n\t        }\n\t        tempConfig._f = config._f[i];\n\t        configFromStringAndFormat(tempConfig);\n\t\n\t        if (!isValid(tempConfig)) {\n\t            continue;\n\t        }\n\t\n\t        // if there is any input that was not parsed add a penalty for that format\n\t        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t        //or tokens\n\t        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t        getParsingFlags(tempConfig).score = currentScore;\n\t\n\t        if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t            scoreToBeat = currentScore;\n\t            bestMoment = tempConfig;\n\t        }\n\t    }\n\t\n\t    extend(config, bestMoment || tempConfig);\n\t}\n\t\n\tfunction configFromObject(config) {\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    var i = normalizeObjectUnits(config._i);\n\t    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t        return obj && parseInt(obj, 10);\n\t    });\n\t\n\t    configFromArray(config);\n\t}\n\t\n\tfunction createFromConfig (config) {\n\t    var res = new Moment(checkOverflow(prepareConfig(config)));\n\t    if (res._nextDay) {\n\t        // Adding is smart enough around DST\n\t        res.add(1, 'd');\n\t        res._nextDay = undefined;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tfunction prepareConfig (config) {\n\t    var input = config._i,\n\t        format = config._f;\n\t\n\t    config._locale = config._locale || getLocale(config._l);\n\t\n\t    if (input === null || (format === undefined && input === '')) {\n\t        return createInvalid({nullInput: true});\n\t    }\n\t\n\t    if (typeof input === 'string') {\n\t        config._i = input = config._locale.preparse(input);\n\t    }\n\t\n\t    if (isMoment(input)) {\n\t        return new Moment(checkOverflow(input));\n\t    } else if (isDate(input)) {\n\t        config._d = input;\n\t    } else if (isArray(format)) {\n\t        configFromStringAndArray(config);\n\t    } else if (format) {\n\t        configFromStringAndFormat(config);\n\t    }  else {\n\t        configFromInput(config);\n\t    }\n\t\n\t    if (!isValid(config)) {\n\t        config._d = null;\n\t    }\n\t\n\t    return config;\n\t}\n\t\n\tfunction configFromInput(config) {\n\t    var input = config._i;\n\t    if (isUndefined(input)) {\n\t        config._d = new Date(hooks.now());\n\t    } else if (isDate(input)) {\n\t        config._d = new Date(input.valueOf());\n\t    } else if (typeof input === 'string') {\n\t        configFromString(config);\n\t    } else if (isArray(input)) {\n\t        config._a = map(input.slice(0), function (obj) {\n\t            return parseInt(obj, 10);\n\t        });\n\t        configFromArray(config);\n\t    } else if (isObject(input)) {\n\t        configFromObject(config);\n\t    } else if (isNumber(input)) {\n\t        // from milliseconds\n\t        config._d = new Date(input);\n\t    } else {\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\tfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t    var c = {};\n\t\n\t    if (locale === true || locale === false) {\n\t        strict = locale;\n\t        locale = undefined;\n\t    }\n\t\n\t    if ((isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)) {\n\t        input = undefined;\n\t    }\n\t    // object construction must be done this way.\n\t    // https://github.com/moment/moment/issues/1423\n\t    c._isAMomentObject = true;\n\t    c._useUTC = c._isUTC = isUTC;\n\t    c._l = locale;\n\t    c._i = input;\n\t    c._f = format;\n\t    c._strict = strict;\n\t\n\t    return createFromConfig(c);\n\t}\n\t\n\tfunction createLocal (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, false);\n\t}\n\t\n\tvar prototypeMin = deprecate(\n\t    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other < this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\tvar prototypeMax = deprecate(\n\t    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other > this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\t// Pick a moment m from moments so that m[fn](other) is true for all\n\t// other. This relies on the function fn to be transitive.\n\t//\n\t// moments should either be an array of moment objects or an array, whose\n\t// first element is an array of moment objects.\n\tfunction pickBy(fn, moments) {\n\t    var res, i;\n\t    if (moments.length === 1 && isArray(moments[0])) {\n\t        moments = moments[0];\n\t    }\n\t    if (!moments.length) {\n\t        return createLocal();\n\t    }\n\t    res = moments[0];\n\t    for (i = 1; i < moments.length; ++i) {\n\t        if (!moments[i].isValid() || moments[i][fn](res)) {\n\t            res = moments[i];\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t// TODO: Use [].sort instead?\n\tfunction min () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isBefore', args);\n\t}\n\t\n\tfunction max () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isAfter', args);\n\t}\n\t\n\tvar now = function () {\n\t    return Date.now ? Date.now() : +(new Date());\n\t};\n\t\n\tvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\t\n\tfunction isDurationValid(m) {\n\t    for (var key in m) {\n\t        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    var unitHasDecimal = false;\n\t    for (var i = 0; i < ordering.length; ++i) {\n\t        if (m[ordering[i]]) {\n\t            if (unitHasDecimal) {\n\t                return false; // only allow non-integers for smallest unit\n\t            }\n\t            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n\t                unitHasDecimal = true;\n\t            }\n\t        }\n\t    }\n\t\n\t    return true;\n\t}\n\t\n\tfunction isValid$1() {\n\t    return this._isValid;\n\t}\n\t\n\tfunction createInvalid$1() {\n\t    return createDuration(NaN);\n\t}\n\t\n\tfunction Duration (duration) {\n\t    var normalizedInput = normalizeObjectUnits(duration),\n\t        years = normalizedInput.year || 0,\n\t        quarters = normalizedInput.quarter || 0,\n\t        months = normalizedInput.month || 0,\n\t        weeks = normalizedInput.week || 0,\n\t        days = normalizedInput.day || 0,\n\t        hours = normalizedInput.hour || 0,\n\t        minutes = normalizedInput.minute || 0,\n\t        seconds = normalizedInput.second || 0,\n\t        milliseconds = normalizedInput.millisecond || 0;\n\t\n\t    this._isValid = isDurationValid(normalizedInput);\n\t\n\t    // representation for dateAddRemove\n\t    this._milliseconds = +milliseconds +\n\t        seconds * 1e3 + // 1000\n\t        minutes * 6e4 + // 1000 * 60\n\t        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t    // Because of dateAddRemove treats 24 hours as different from a\n\t    // day when working around DST, we need to store them separately\n\t    this._days = +days +\n\t        weeks * 7;\n\t    // It is impossible translate months into days without knowing\n\t    // which months you are are talking about, so we have to store\n\t    // it separately.\n\t    this._months = +months +\n\t        quarters * 3 +\n\t        years * 12;\n\t\n\t    this._data = {};\n\t\n\t    this._locale = getLocale();\n\t\n\t    this._bubble();\n\t}\n\t\n\tfunction isDuration (obj) {\n\t    return obj instanceof Duration;\n\t}\n\t\n\tfunction absRound (number) {\n\t    if (number < 0) {\n\t        return Math.round(-1 * number) * -1;\n\t    } else {\n\t        return Math.round(number);\n\t    }\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction offset (token, separator) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        var offset = this.utcOffset();\n\t        var sign = '+';\n\t        if (offset < 0) {\n\t            offset = -offset;\n\t            sign = '-';\n\t        }\n\t        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t    });\n\t}\n\t\n\toffset('Z', ':');\n\toffset('ZZ', '');\n\t\n\t// PARSING\n\t\n\taddRegexToken('Z',  matchShortOffset);\n\taddRegexToken('ZZ', matchShortOffset);\n\taddParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t    config._useUTC = true;\n\t    config._tzm = offsetFromString(matchShortOffset, input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// timezone chunker\n\t// '+10:00' > ['10',  '00']\n\t// '-1530'  > ['-15', '30']\n\tvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\tfunction offsetFromString(matcher, string) {\n\t    var matches = (string || '').match(matcher);\n\t\n\t    if (matches === null) {\n\t        return null;\n\t    }\n\t\n\t    var chunk   = matches[matches.length - 1] || [];\n\t    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t    return minutes === 0 ?\n\t      0 :\n\t      parts[0] === '+' ? minutes : -minutes;\n\t}\n\t\n\t// Return a moment from input, that is local/utc/zone equivalent to model.\n\tfunction cloneWithOffset(input, model) {\n\t    var res, diff;\n\t    if (model._isUTC) {\n\t        res = model.clone();\n\t        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n\t        // Use low-level api, because this fn is low-level api.\n\t        res._d.setTime(res._d.valueOf() + diff);\n\t        hooks.updateOffset(res, false);\n\t        return res;\n\t    } else {\n\t        return createLocal(input).local();\n\t    }\n\t}\n\t\n\tfunction getDateOffset (m) {\n\t    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t    // https://github.com/moment/moment/pull/1871\n\t    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t}\n\t\n\t// HOOKS\n\t\n\t// This function will be called whenever a moment is mutated.\n\t// It is intended to keep the offset in sync with the timezone.\n\thooks.updateOffset = function () {};\n\t\n\t// MOMENTS\n\t\n\t// keepLocalTime = true means only change the timezone, without\n\t// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t// +0200, so we adjust the time as needed, to be valid.\n\t//\n\t// Keeping the time actually adds/subtracts (one hour)\n\t// from the actual represented time. That is why we call updateOffset\n\t// a second time. In case it wants us to change the offset again\n\t// _changeInProgress == true case, then we have to adjust, because\n\t// there is no such time in the given timezone.\n\tfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n\t    var offset = this._offset || 0,\n\t        localAdjust;\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    if (input != null) {\n\t        if (typeof input === 'string') {\n\t            input = offsetFromString(matchShortOffset, input);\n\t            if (input === null) {\n\t                return this;\n\t            }\n\t        } else if (Math.abs(input) < 16 && !keepMinutes) {\n\t            input = input * 60;\n\t        }\n\t        if (!this._isUTC && keepLocalTime) {\n\t            localAdjust = getDateOffset(this);\n\t        }\n\t        this._offset = input;\n\t        this._isUTC = true;\n\t        if (localAdjust != null) {\n\t            this.add(localAdjust, 'm');\n\t        }\n\t        if (offset !== input) {\n\t            if (!keepLocalTime || this._changeInProgress) {\n\t                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n\t            } else if (!this._changeInProgress) {\n\t                this._changeInProgress = true;\n\t                hooks.updateOffset(this, true);\n\t                this._changeInProgress = null;\n\t            }\n\t        }\n\t        return this;\n\t    } else {\n\t        return this._isUTC ? offset : getDateOffset(this);\n\t    }\n\t}\n\t\n\tfunction getSetZone (input, keepLocalTime) {\n\t    if (input != null) {\n\t        if (typeof input !== 'string') {\n\t            input = -input;\n\t        }\n\t\n\t        this.utcOffset(input, keepLocalTime);\n\t\n\t        return this;\n\t    } else {\n\t        return -this.utcOffset();\n\t    }\n\t}\n\t\n\tfunction setOffsetToUTC (keepLocalTime) {\n\t    return this.utcOffset(0, keepLocalTime);\n\t}\n\t\n\tfunction setOffsetToLocal (keepLocalTime) {\n\t    if (this._isUTC) {\n\t        this.utcOffset(0, keepLocalTime);\n\t        this._isUTC = false;\n\t\n\t        if (keepLocalTime) {\n\t            this.subtract(getDateOffset(this), 'm');\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction setOffsetToParsedOffset () {\n\t    if (this._tzm != null) {\n\t        this.utcOffset(this._tzm, false, true);\n\t    } else if (typeof this._i === 'string') {\n\t        var tZone = offsetFromString(matchOffset, this._i);\n\t        if (tZone != null) {\n\t            this.utcOffset(tZone);\n\t        }\n\t        else {\n\t            this.utcOffset(0, true);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction hasAlignedHourOffset (input) {\n\t    if (!this.isValid()) {\n\t        return false;\n\t    }\n\t    input = input ? createLocal(input).utcOffset() : 0;\n\t\n\t    return (this.utcOffset() - input) % 60 === 0;\n\t}\n\t\n\tfunction isDaylightSavingTime () {\n\t    return (\n\t        this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t        this.utcOffset() > this.clone().month(5).utcOffset()\n\t    );\n\t}\n\t\n\tfunction isDaylightSavingTimeShifted () {\n\t    if (!isUndefined(this._isDSTShifted)) {\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    var c = {};\n\t\n\t    copyConfig(c, this);\n\t    c = prepareConfig(c);\n\t\n\t    if (c._a) {\n\t        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t        this._isDSTShifted = this.isValid() &&\n\t            compareArrays(c._a, other.toArray()) > 0;\n\t    } else {\n\t        this._isDSTShifted = false;\n\t    }\n\t\n\t    return this._isDSTShifted;\n\t}\n\t\n\tfunction isLocal () {\n\t    return this.isValid() ? !this._isUTC : false;\n\t}\n\t\n\tfunction isUtcOffset () {\n\t    return this.isValid() ? this._isUTC : false;\n\t}\n\t\n\tfunction isUtc () {\n\t    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t}\n\t\n\t// ASP.NET json date format regex\n\tvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\t\n\t// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t// and further modified to allow for strings containing both week and day\n\tvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\t\n\tfunction createDuration (input, key) {\n\t    var duration = input,\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t        sign,\n\t        ret,\n\t        diffRes;\n\t\n\t    if (isDuration(input)) {\n\t        duration = {\n\t            ms : input._milliseconds,\n\t            d  : input._days,\n\t            M  : input._months\n\t        };\n\t    } else if (isNumber(input)) {\n\t        duration = {};\n\t        if (key) {\n\t            duration[key] = input;\n\t        } else {\n\t            duration.milliseconds = input;\n\t        }\n\t    } else if (!!(match = aspNetRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y  : 0,\n\t            d  : toInt(match[DATE])                         * sign,\n\t            h  : toInt(match[HOUR])                         * sign,\n\t            m  : toInt(match[MINUTE])                       * sign,\n\t            s  : toInt(match[SECOND])                       * sign,\n\t            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\t        };\n\t    } else if (!!(match = isoRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y : parseIso(match[2], sign),\n\t            M : parseIso(match[3], sign),\n\t            w : parseIso(match[4], sign),\n\t            d : parseIso(match[5], sign),\n\t            h : parseIso(match[6], sign),\n\t            m : parseIso(match[7], sign),\n\t            s : parseIso(match[8], sign)\n\t        };\n\t    } else if (duration == null) {// checks for null or undefined\n\t        duration = {};\n\t    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\t\n\t        duration = {};\n\t        duration.ms = diffRes.milliseconds;\n\t        duration.M = diffRes.months;\n\t    }\n\t\n\t    ret = new Duration(duration);\n\t\n\t    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t        ret._locale = input._locale;\n\t    }\n\t\n\t    return ret;\n\t}\n\t\n\tcreateDuration.fn = Duration.prototype;\n\tcreateDuration.invalid = createInvalid$1;\n\t\n\tfunction parseIso (inp, sign) {\n\t    // We'd normally use ~~inp for this, but unfortunately it also\n\t    // converts floats to ints.\n\t    // inp may be undefined, so careful calling replace on it.\n\t    var res = inp && parseFloat(inp.replace(',', '.'));\n\t    // apply sign while we're at it\n\t    return (isNaN(res) ? 0 : res) * sign;\n\t}\n\t\n\tfunction positiveMomentsDifference(base, other) {\n\t    var res = {milliseconds: 0, months: 0};\n\t\n\t    res.months = other.month() - base.month() +\n\t        (other.year() - base.year()) * 12;\n\t    if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t        --res.months;\n\t    }\n\t\n\t    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t    return res;\n\t}\n\t\n\tfunction momentsDifference(base, other) {\n\t    var res;\n\t    if (!(base.isValid() && other.isValid())) {\n\t        return {milliseconds: 0, months: 0};\n\t    }\n\t\n\t    other = cloneWithOffset(other, base);\n\t    if (base.isBefore(other)) {\n\t        res = positiveMomentsDifference(base, other);\n\t    } else {\n\t        res = positiveMomentsDifference(other, base);\n\t        res.milliseconds = -res.milliseconds;\n\t        res.months = -res.months;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\t// TODO: remove 'name' arg after deprecation is removed\n\tfunction createAdder(direction, name) {\n\t    return function (val, period) {\n\t        var dur, tmp;\n\t        //invert the arguments, but complain about it\n\t        if (period !== null && !isNaN(+period)) {\n\t            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n\t            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n\t            tmp = val; val = period; period = tmp;\n\t        }\n\t\n\t        val = typeof val === 'string' ? +val : val;\n\t        dur = createDuration(val, period);\n\t        addSubtract(this, dur, direction);\n\t        return this;\n\t    };\n\t}\n\t\n\tfunction addSubtract (mom, duration, isAdding, updateOffset) {\n\t    var milliseconds = duration._milliseconds,\n\t        days = absRound(duration._days),\n\t        months = absRound(duration._months);\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return;\n\t    }\n\t\n\t    updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t    if (milliseconds) {\n\t        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t    }\n\t    if (days) {\n\t        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t    }\n\t    if (months) {\n\t        setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t    }\n\t    if (updateOffset) {\n\t        hooks.updateOffset(mom, days || months);\n\t    }\n\t}\n\t\n\tvar add      = createAdder(1, 'add');\n\tvar subtract = createAdder(-1, 'subtract');\n\t\n\tfunction getCalendarFormat(myMoment, now) {\n\t    var diff = myMoment.diff(now, 'days', true);\n\t    return diff < -6 ? 'sameElse' :\n\t            diff < -1 ? 'lastWeek' :\n\t            diff < 0 ? 'lastDay' :\n\t            diff < 1 ? 'sameDay' :\n\t            diff < 2 ? 'nextDay' :\n\t            diff < 7 ? 'nextWeek' : 'sameElse';\n\t}\n\t\n\tfunction calendar$1 (time, formats) {\n\t    // We want to compare the start of today, vs this.\n\t    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t    var now = time || createLocal(),\n\t        sod = cloneWithOffset(now, this).startOf('day'),\n\t        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\t\n\t    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\t\n\t    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n\t}\n\t\n\tfunction clone () {\n\t    return new Moment(this);\n\t}\n\t\n\tfunction isAfter (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() > localInput.valueOf();\n\t    } else {\n\t        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isBefore (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() < localInput.valueOf();\n\t    } else {\n\t        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t    }\n\t}\n\t\n\tfunction isBetween (from, to, units, inclusivity) {\n\t    inclusivity = inclusivity || '()';\n\t    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n\t        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n\t}\n\t\n\tfunction isSame (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input),\n\t        inputMs;\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(units || 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() === localInput.valueOf();\n\t    } else {\n\t        inputMs = localInput.valueOf();\n\t        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isSameOrAfter (input, units) {\n\t    return this.isSame(input, units) || this.isAfter(input,units);\n\t}\n\t\n\tfunction isSameOrBefore (input, units) {\n\t    return this.isSame(input, units) || this.isBefore(input,units);\n\t}\n\t\n\tfunction diff (input, units, asFloat) {\n\t    var that,\n\t        zoneDelta,\n\t        delta, output;\n\t\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    that = cloneWithOffset(input, this);\n\t\n\t    if (!that.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'year' || units === 'month' || units === 'quarter') {\n\t        output = monthDiff(this, that);\n\t        if (units === 'quarter') {\n\t            output = output / 3;\n\t        } else if (units === 'year') {\n\t            output = output / 12;\n\t        }\n\t    } else {\n\t        delta = this - that;\n\t        output = units === 'second' ? delta / 1e3 : // 1000\n\t            units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            delta;\n\t    }\n\t    return asFloat ? output : absFloor(output);\n\t}\n\t\n\tfunction monthDiff (a, b) {\n\t    // difference in months\n\t    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t        anchor2, adjust;\n\t\n\t    if (b - anchor < 0) {\n\t        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor - anchor2);\n\t    } else {\n\t        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor2 - anchor);\n\t    }\n\t\n\t    //check for negative zero, return zero if negative zero\n\t    return -(wholeMonthDiff + adjust) || 0;\n\t}\n\t\n\thooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\thooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\t\n\tfunction toString () {\n\t    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t}\n\t\n\tfunction toISOString() {\n\t    if (!this.isValid()) {\n\t        return null;\n\t    }\n\t    var m = this.clone().utc();\n\t    if (m.year() < 0 || m.year() > 9999) {\n\t        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t    }\n\t    if (isFunction(Date.prototype.toISOString)) {\n\t        // native implementation is ~50x faster, use it when we can\n\t        return this.toDate().toISOString();\n\t    }\n\t    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t}\n\t\n\t/**\n\t * Return a human readable representation of a moment that can\n\t * also be evaluated to get a new moment which is the same\n\t *\n\t * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t */\n\tfunction inspect () {\n\t    if (!this.isValid()) {\n\t        return 'moment.invalid(/* ' + this._i + ' */)';\n\t    }\n\t    var func = 'moment';\n\t    var zone = '';\n\t    if (!this.isLocal()) {\n\t        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t        zone = 'Z';\n\t    }\n\t    var prefix = '[' + func + '(\"]';\n\t    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n\t    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t    var suffix = zone + '[\")]';\n\t\n\t    return this.format(prefix + year + datetime + suffix);\n\t}\n\t\n\tfunction format (inputString) {\n\t    if (!inputString) {\n\t        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n\t    }\n\t    var output = formatMoment(this, inputString);\n\t    return this.localeData().postformat(output);\n\t}\n\t\n\tfunction from (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction fromNow (withoutSuffix) {\n\t    return this.from(createLocal(), withoutSuffix);\n\t}\n\t\n\tfunction to (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction toNow (withoutSuffix) {\n\t    return this.to(createLocal(), withoutSuffix);\n\t}\n\t\n\t// If passed a locale key, it will set the locale for this\n\t// instance.  Otherwise, it will return the locale configuration\n\t// variables for this instance.\n\tfunction locale (key) {\n\t    var newLocaleData;\n\t\n\t    if (key === undefined) {\n\t        return this._locale._abbr;\n\t    } else {\n\t        newLocaleData = getLocale(key);\n\t        if (newLocaleData != null) {\n\t            this._locale = newLocaleData;\n\t        }\n\t        return this;\n\t    }\n\t}\n\t\n\tvar lang = deprecate(\n\t    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t    function (key) {\n\t        if (key === undefined) {\n\t            return this.localeData();\n\t        } else {\n\t            return this.locale(key);\n\t        }\n\t    }\n\t);\n\t\n\tfunction localeData () {\n\t    return this._locale;\n\t}\n\t\n\tfunction startOf (units) {\n\t    units = normalizeUnits(units);\n\t    // the following switch intentionally omits break keywords\n\t    // to utilize falling through the cases.\n\t    switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t        case 'date':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t    }\n\t\n\t    // weeks are a special case\n\t    if (units === 'week') {\n\t        this.weekday(0);\n\t    }\n\t    if (units === 'isoWeek') {\n\t        this.isoWeekday(1);\n\t    }\n\t\n\t    // quarters are also special\n\t    if (units === 'quarter') {\n\t        this.month(Math.floor(this.month() / 3) * 3);\n\t    }\n\t\n\t    return this;\n\t}\n\t\n\tfunction endOf (units) {\n\t    units = normalizeUnits(units);\n\t    if (units === undefined || units === 'millisecond') {\n\t        return this;\n\t    }\n\t\n\t    // 'date' is an alias for 'day', so it should be considered as such.\n\t    if (units === 'date') {\n\t        units = 'day';\n\t    }\n\t\n\t    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t}\n\t\n\tfunction valueOf () {\n\t    return this._d.valueOf() - ((this._offset || 0) * 60000);\n\t}\n\t\n\tfunction unix () {\n\t    return Math.floor(this.valueOf() / 1000);\n\t}\n\t\n\tfunction toDate () {\n\t    return new Date(this.valueOf());\n\t}\n\t\n\tfunction toArray () {\n\t    var m = this;\n\t    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t}\n\t\n\tfunction toObject () {\n\t    var m = this;\n\t    return {\n\t        years: m.year(),\n\t        months: m.month(),\n\t        date: m.date(),\n\t        hours: m.hours(),\n\t        minutes: m.minutes(),\n\t        seconds: m.seconds(),\n\t        milliseconds: m.milliseconds()\n\t    };\n\t}\n\t\n\tfunction toJSON () {\n\t    // new Date(NaN).toJSON() === null\n\t    return this.isValid() ? this.toISOString() : null;\n\t}\n\t\n\tfunction isValid$2 () {\n\t    return isValid(this);\n\t}\n\t\n\tfunction parsingFlags () {\n\t    return extend({}, getParsingFlags(this));\n\t}\n\t\n\tfunction invalidAt () {\n\t    return getParsingFlags(this).overflow;\n\t}\n\t\n\tfunction creationData() {\n\t    return {\n\t        input: this._i,\n\t        format: this._f,\n\t        locale: this._locale,\n\t        isUTC: this._isUTC,\n\t        strict: this._strict\n\t    };\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken(0, ['gg', 2], 0, function () {\n\t    return this.weekYear() % 100;\n\t});\n\t\n\taddFormatToken(0, ['GG', 2], 0, function () {\n\t    return this.isoWeekYear() % 100;\n\t});\n\t\n\tfunction addWeekYearFormatToken (token, getter) {\n\t    addFormatToken(0, [token, token.length], 0, getter);\n\t}\n\t\n\taddWeekYearFormatToken('gggg',     'weekYear');\n\taddWeekYearFormatToken('ggggg',    'weekYear');\n\taddWeekYearFormatToken('GGGG',  'isoWeekYear');\n\taddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('weekYear', 'gg');\n\taddUnitAlias('isoWeekYear', 'GG');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('weekYear', 1);\n\taddUnitPriority('isoWeekYear', 1);\n\t\n\t\n\t// PARSING\n\t\n\taddRegexToken('G',      matchSigned);\n\taddRegexToken('g',      matchSigned);\n\taddRegexToken('GG',     match1to2, match2);\n\taddRegexToken('gg',     match1to2, match2);\n\taddRegexToken('GGGG',   match1to4, match4);\n\taddRegexToken('gggg',   match1to4, match4);\n\taddRegexToken('GGGGG',  match1to6, match6);\n\taddRegexToken('ggggg',  match1to6, match6);\n\t\n\taddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t    week[token.substr(0, 2)] = toInt(input);\n\t});\n\t\n\taddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t    week[token] = hooks.parseTwoDigitYear(input);\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy);\n\t}\n\t\n\tfunction getSetISOWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t}\n\t\n\tfunction getISOWeeksInYear () {\n\t    return weeksInYear(this.year(), 1, 4);\n\t}\n\t\n\tfunction getWeeksInYear () {\n\t    var weekInfo = this.localeData()._week;\n\t    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t}\n\t\n\tfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t    var weeksTarget;\n\t    if (input == null) {\n\t        return weekOfYear(this, dow, doy).year;\n\t    } else {\n\t        weeksTarget = weeksInYear(input, dow, doy);\n\t        if (week > weeksTarget) {\n\t            week = weeksTarget;\n\t        }\n\t        return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t    }\n\t}\n\t\n\tfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n\t    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t    this.year(date.getUTCFullYear());\n\t    this.month(date.getUTCMonth());\n\t    this.date(date.getUTCDate());\n\t    return this;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('quarter', 'Q');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('quarter', 7);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Q', match1);\n\taddParseToken('Q', function (input, array) {\n\t    array[MONTH] = (toInt(input) - 1) * 3;\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetQuarter (input) {\n\t    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('date', 'D');\n\t\n\t// PRIOROITY\n\taddUnitPriority('date', 9);\n\t\n\t// PARSING\n\t\n\taddRegexToken('D',  match1to2);\n\taddRegexToken('DD', match1to2, match2);\n\taddRegexToken('Do', function (isStrict, locale) {\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    return isStrict ?\n\t      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n\t      locale._dayOfMonthOrdinalParseLenient;\n\t});\n\t\n\taddParseToken(['D', 'DD'], DATE);\n\taddParseToken('Do', function (input, array) {\n\t    array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t});\n\t\n\t// MOMENTS\n\t\n\tvar getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('dayOfYear', 'DDD');\n\t\n\t// PRIORITY\n\taddUnitPriority('dayOfYear', 4);\n\t\n\t// PARSING\n\t\n\taddRegexToken('DDD',  match1to3);\n\taddRegexToken('DDDD', match3);\n\taddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t    config._dayOfYear = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfYear (input) {\n\t    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('minute', 'm');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('minute', 14);\n\t\n\t// PARSING\n\t\n\taddRegexToken('m',  match1to2);\n\taddRegexToken('mm', match1to2, match2);\n\taddParseToken(['m', 'mm'], MINUTE);\n\t\n\t// MOMENTS\n\t\n\tvar getSetMinute = makeGetSet('Minutes', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('second', 's');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('second', 15);\n\t\n\t// PARSING\n\t\n\taddRegexToken('s',  match1to2);\n\taddRegexToken('ss', match1to2, match2);\n\taddParseToken(['s', 'ss'], SECOND);\n\t\n\t// MOMENTS\n\t\n\tvar getSetSecond = makeGetSet('Seconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('S', 0, 0, function () {\n\t    return ~~(this.millisecond() / 100);\n\t});\n\t\n\taddFormatToken(0, ['SS', 2], 0, function () {\n\t    return ~~(this.millisecond() / 10);\n\t});\n\t\n\taddFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\taddFormatToken(0, ['SSSS', 4], 0, function () {\n\t    return this.millisecond() * 10;\n\t});\n\taddFormatToken(0, ['SSSSS', 5], 0, function () {\n\t    return this.millisecond() * 100;\n\t});\n\taddFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t    return this.millisecond() * 1000;\n\t});\n\taddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t    return this.millisecond() * 10000;\n\t});\n\taddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t    return this.millisecond() * 100000;\n\t});\n\taddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t    return this.millisecond() * 1000000;\n\t});\n\t\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('millisecond', 'ms');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('millisecond', 16);\n\t\n\t// PARSING\n\t\n\taddRegexToken('S',    match1to3, match1);\n\taddRegexToken('SS',   match1to3, match2);\n\taddRegexToken('SSS',  match1to3, match3);\n\t\n\tvar token;\n\tfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t    addRegexToken(token, matchUnsigned);\n\t}\n\t\n\tfunction parseMs(input, array) {\n\t    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t}\n\t\n\tfor (token = 'S'; token.length <= 9; token += 'S') {\n\t    addParseToken(token, parseMs);\n\t}\n\t// MOMENTS\n\t\n\tvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('z',  0, 0, 'zoneAbbr');\n\taddFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t// MOMENTS\n\t\n\tfunction getZoneAbbr () {\n\t    return this._isUTC ? 'UTC' : '';\n\t}\n\t\n\tfunction getZoneName () {\n\t    return this._isUTC ? 'Coordinated Universal Time' : '';\n\t}\n\t\n\tvar proto = Moment.prototype;\n\t\n\tproto.add               = add;\n\tproto.calendar          = calendar$1;\n\tproto.clone             = clone;\n\tproto.diff              = diff;\n\tproto.endOf             = endOf;\n\tproto.format            = format;\n\tproto.from              = from;\n\tproto.fromNow           = fromNow;\n\tproto.to                = to;\n\tproto.toNow             = toNow;\n\tproto.get               = stringGet;\n\tproto.invalidAt         = invalidAt;\n\tproto.isAfter           = isAfter;\n\tproto.isBefore          = isBefore;\n\tproto.isBetween         = isBetween;\n\tproto.isSame            = isSame;\n\tproto.isSameOrAfter     = isSameOrAfter;\n\tproto.isSameOrBefore    = isSameOrBefore;\n\tproto.isValid           = isValid$2;\n\tproto.lang              = lang;\n\tproto.locale            = locale;\n\tproto.localeData        = localeData;\n\tproto.max               = prototypeMax;\n\tproto.min               = prototypeMin;\n\tproto.parsingFlags      = parsingFlags;\n\tproto.set               = stringSet;\n\tproto.startOf           = startOf;\n\tproto.subtract          = subtract;\n\tproto.toArray           = toArray;\n\tproto.toObject          = toObject;\n\tproto.toDate            = toDate;\n\tproto.toISOString       = toISOString;\n\tproto.inspect           = inspect;\n\tproto.toJSON            = toJSON;\n\tproto.toString          = toString;\n\tproto.unix              = unix;\n\tproto.valueOf           = valueOf;\n\tproto.creationData      = creationData;\n\t\n\t// Year\n\tproto.year       = getSetYear;\n\tproto.isLeapYear = getIsLeapYear;\n\t\n\t// Week Year\n\tproto.weekYear    = getSetWeekYear;\n\tproto.isoWeekYear = getSetISOWeekYear;\n\t\n\t// Quarter\n\tproto.quarter = proto.quarters = getSetQuarter;\n\t\n\t// Month\n\tproto.month       = getSetMonth;\n\tproto.daysInMonth = getDaysInMonth;\n\t\n\t// Week\n\tproto.week           = proto.weeks        = getSetWeek;\n\tproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n\tproto.weeksInYear    = getWeeksInYear;\n\tproto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t// Day\n\tproto.date       = getSetDayOfMonth;\n\tproto.day        = proto.days             = getSetDayOfWeek;\n\tproto.weekday    = getSetLocaleDayOfWeek;\n\tproto.isoWeekday = getSetISODayOfWeek;\n\tproto.dayOfYear  = getSetDayOfYear;\n\t\n\t// Hour\n\tproto.hour = proto.hours = getSetHour;\n\t\n\t// Minute\n\tproto.minute = proto.minutes = getSetMinute;\n\t\n\t// Second\n\tproto.second = proto.seconds = getSetSecond;\n\t\n\t// Millisecond\n\tproto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\n\t// Offset\n\tproto.utcOffset            = getSetOffset;\n\tproto.utc                  = setOffsetToUTC;\n\tproto.local                = setOffsetToLocal;\n\tproto.parseZone            = setOffsetToParsedOffset;\n\tproto.hasAlignedHourOffset = hasAlignedHourOffset;\n\tproto.isDST                = isDaylightSavingTime;\n\tproto.isLocal              = isLocal;\n\tproto.isUtcOffset          = isUtcOffset;\n\tproto.isUtc                = isUtc;\n\tproto.isUTC                = isUtc;\n\t\n\t// Timezone\n\tproto.zoneAbbr = getZoneAbbr;\n\tproto.zoneName = getZoneName;\n\t\n\t// Deprecations\n\tproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\tproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\tproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\tproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n\tproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\t\n\tfunction createUnix (input) {\n\t    return createLocal(input * 1000);\n\t}\n\t\n\tfunction createInZone () {\n\t    return createLocal.apply(null, arguments).parseZone();\n\t}\n\t\n\tfunction preParsePostFormat (string) {\n\t    return string;\n\t}\n\t\n\tvar proto$1 = Locale.prototype;\n\t\n\tproto$1.calendar        = calendar;\n\tproto$1.longDateFormat  = longDateFormat;\n\tproto$1.invalidDate     = invalidDate;\n\tproto$1.ordinal         = ordinal;\n\tproto$1.preparse        = preParsePostFormat;\n\tproto$1.postformat      = preParsePostFormat;\n\tproto$1.relativeTime    = relativeTime;\n\tproto$1.pastFuture      = pastFuture;\n\tproto$1.set             = set;\n\t\n\t// Month\n\tproto$1.months            =        localeMonths;\n\tproto$1.monthsShort       =        localeMonthsShort;\n\tproto$1.monthsParse       =        localeMonthsParse;\n\tproto$1.monthsRegex       = monthsRegex;\n\tproto$1.monthsShortRegex  = monthsShortRegex;\n\t\n\t// Week\n\tproto$1.week = localeWeek;\n\tproto$1.firstDayOfYear = localeFirstDayOfYear;\n\tproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t// Day of Week\n\tproto$1.weekdays       =        localeWeekdays;\n\tproto$1.weekdaysMin    =        localeWeekdaysMin;\n\tproto$1.weekdaysShort  =        localeWeekdaysShort;\n\tproto$1.weekdaysParse  =        localeWeekdaysParse;\n\t\n\tproto$1.weekdaysRegex       =        weekdaysRegex;\n\tproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n\tproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\t\n\t// Hours\n\tproto$1.isPM = localeIsPM;\n\tproto$1.meridiem = localeMeridiem;\n\t\n\tfunction get$1 (format, index, field, setter) {\n\t    var locale = getLocale();\n\t    var utc = createUTC().set(setter, index);\n\t    return locale[field](utc, format);\n\t}\n\t\n\tfunction listMonthsImpl (format, index, field) {\n\t    if (isNumber(format)) {\n\t        index = format;\n\t        format = undefined;\n\t    }\n\t\n\t    format = format || '';\n\t\n\t    if (index != null) {\n\t        return get$1(format, index, field, 'month');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 12; i++) {\n\t        out[i] = get$1(format, i, field, 'month');\n\t    }\n\t    return out;\n\t}\n\t\n\t// ()\n\t// (5)\n\t// (fmt, 5)\n\t// (fmt)\n\t// (true)\n\t// (true, 5)\n\t// (true, fmt, 5)\n\t// (true, fmt)\n\tfunction listWeekdaysImpl (localeSorted, format, index, field) {\n\t    if (typeof localeSorted === 'boolean') {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    } else {\n\t        format = localeSorted;\n\t        index = format;\n\t        localeSorted = false;\n\t\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    }\n\t\n\t    var locale = getLocale(),\n\t        shift = localeSorted ? locale._week.dow : 0;\n\t\n\t    if (index != null) {\n\t        return get$1(format, (index + shift) % 7, field, 'day');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 7; i++) {\n\t        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t    }\n\t    return out;\n\t}\n\t\n\tfunction listMonths (format, index) {\n\t    return listMonthsImpl(format, index, 'months');\n\t}\n\t\n\tfunction listMonthsShort (format, index) {\n\t    return listMonthsImpl(format, index, 'monthsShort');\n\t}\n\t\n\tfunction listWeekdays (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t}\n\t\n\tfunction listWeekdaysShort (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t}\n\t\n\tfunction listWeekdaysMin (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t}\n\t\n\tgetSetGlobalLocale('en', {\n\t    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t    ordinal : function (number) {\n\t        var b = number % 10,\n\t            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t            (b === 1) ? 'st' :\n\t            (b === 2) ? 'nd' :\n\t            (b === 3) ? 'rd' : 'th';\n\t        return number + output;\n\t    }\n\t});\n\t\n\t// Side effect imports\n\thooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n\thooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\t\n\tvar mathAbs = Math.abs;\n\t\n\tfunction abs () {\n\t    var data           = this._data;\n\t\n\t    this._milliseconds = mathAbs(this._milliseconds);\n\t    this._days         = mathAbs(this._days);\n\t    this._months       = mathAbs(this._months);\n\t\n\t    data.milliseconds  = mathAbs(data.milliseconds);\n\t    data.seconds       = mathAbs(data.seconds);\n\t    data.minutes       = mathAbs(data.minutes);\n\t    data.hours         = mathAbs(data.hours);\n\t    data.months        = mathAbs(data.months);\n\t    data.years         = mathAbs(data.years);\n\t\n\t    return this;\n\t}\n\t\n\tfunction addSubtract$1 (duration, input, value, direction) {\n\t    var other = createDuration(input, value);\n\t\n\t    duration._milliseconds += direction * other._milliseconds;\n\t    duration._days         += direction * other._days;\n\t    duration._months       += direction * other._months;\n\t\n\t    return duration._bubble();\n\t}\n\t\n\t// supports only 2.0-style add(1, 's') or add(duration)\n\tfunction add$1 (input, value) {\n\t    return addSubtract$1(this, input, value, 1);\n\t}\n\t\n\t// supports only 2.0-style subtract(1, 's') or subtract(duration)\n\tfunction subtract$1 (input, value) {\n\t    return addSubtract$1(this, input, value, -1);\n\t}\n\t\n\tfunction absCeil (number) {\n\t    if (number < 0) {\n\t        return Math.floor(number);\n\t    } else {\n\t        return Math.ceil(number);\n\t    }\n\t}\n\t\n\tfunction bubble () {\n\t    var milliseconds = this._milliseconds;\n\t    var days         = this._days;\n\t    var months       = this._months;\n\t    var data         = this._data;\n\t    var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t    // if we have a mix of positive and negative values, bubble down first\n\t    // check: https://github.com/moment/moment/issues/2166\n\t    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t        days = 0;\n\t        months = 0;\n\t    }\n\t\n\t    // The following code bubbles up values, see the tests for\n\t    // examples of what that means.\n\t    data.milliseconds = milliseconds % 1000;\n\t\n\t    seconds           = absFloor(milliseconds / 1000);\n\t    data.seconds      = seconds % 60;\n\t\n\t    minutes           = absFloor(seconds / 60);\n\t    data.minutes      = minutes % 60;\n\t\n\t    hours             = absFloor(minutes / 60);\n\t    data.hours        = hours % 24;\n\t\n\t    days += absFloor(hours / 24);\n\t\n\t    // convert days to months\n\t    monthsFromDays = absFloor(daysToMonths(days));\n\t    months += monthsFromDays;\n\t    days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t    // 12 months -> 1 year\n\t    years = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t    data.days   = days;\n\t    data.months = months;\n\t    data.years  = years;\n\t\n\t    return this;\n\t}\n\t\n\tfunction daysToMonths (days) {\n\t    // 400 years have 146097 days (taking into account leap year rules)\n\t    // 400 years have 12 months === 4800\n\t    return days * 4800 / 146097;\n\t}\n\t\n\tfunction monthsToDays (months) {\n\t    // the reverse of daysToMonths\n\t    return months * 146097 / 4800;\n\t}\n\t\n\tfunction as (units) {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    var days;\n\t    var months;\n\t    var milliseconds = this._milliseconds;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'month' || units === 'year') {\n\t        days   = this._days   + milliseconds / 864e5;\n\t        months = this._months + daysToMonths(days);\n\t        return units === 'month' ? months : months / 12;\n\t    } else {\n\t        // handle milliseconds separately because of floating point math errors (issue #1867)\n\t        days = this._days + Math.round(monthsToDays(this._months));\n\t        switch (units) {\n\t            case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t            case 'day'    : return days         + milliseconds / 864e5;\n\t            case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t            case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t            case 'second' : return days * 86400 + milliseconds / 1000;\n\t            // Math.floor prevents floating point math errors here\n\t            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t            default: throw new Error('Unknown unit ' + units);\n\t        }\n\t    }\n\t}\n\t\n\t// TODO: Use this.as('ms')?\n\tfunction valueOf$1 () {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    return (\n\t        this._milliseconds +\n\t        this._days * 864e5 +\n\t        (this._months % 12) * 2592e6 +\n\t        toInt(this._months / 12) * 31536e6\n\t    );\n\t}\n\t\n\tfunction makeAs (alias) {\n\t    return function () {\n\t        return this.as(alias);\n\t    };\n\t}\n\t\n\tvar asMilliseconds = makeAs('ms');\n\tvar asSeconds      = makeAs('s');\n\tvar asMinutes      = makeAs('m');\n\tvar asHours        = makeAs('h');\n\tvar asDays         = makeAs('d');\n\tvar asWeeks        = makeAs('w');\n\tvar asMonths       = makeAs('M');\n\tvar asYears        = makeAs('y');\n\t\n\tfunction get$2 (units) {\n\t    units = normalizeUnits(units);\n\t    return this.isValid() ? this[units + 's']() : NaN;\n\t}\n\t\n\tfunction makeGetter(name) {\n\t    return function () {\n\t        return this.isValid() ? this._data[name] : NaN;\n\t    };\n\t}\n\t\n\tvar milliseconds = makeGetter('milliseconds');\n\tvar seconds      = makeGetter('seconds');\n\tvar minutes      = makeGetter('minutes');\n\tvar hours        = makeGetter('hours');\n\tvar days         = makeGetter('days');\n\tvar months       = makeGetter('months');\n\tvar years        = makeGetter('years');\n\t\n\tfunction weeks () {\n\t    return absFloor(this.days() / 7);\n\t}\n\t\n\tvar round = Math.round;\n\tvar thresholds = {\n\t    ss: 44,         // a few seconds to seconds\n\t    s : 45,         // seconds to minute\n\t    m : 45,         // minutes to hour\n\t    h : 22,         // hours to day\n\t    d : 26,         // days to month\n\t    M : 11          // months to year\n\t};\n\t\n\t// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\tfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t}\n\t\n\tfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n\t    var duration = createDuration(posNegDuration).abs();\n\t    var seconds  = round(duration.as('s'));\n\t    var minutes  = round(duration.as('m'));\n\t    var hours    = round(duration.as('h'));\n\t    var days     = round(duration.as('d'));\n\t    var months   = round(duration.as('M'));\n\t    var years    = round(duration.as('y'));\n\t\n\t    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n\t            seconds < thresholds.s   && ['ss', seconds] ||\n\t            minutes <= 1             && ['m']           ||\n\t            minutes < thresholds.m   && ['mm', minutes] ||\n\t            hours   <= 1             && ['h']           ||\n\t            hours   < thresholds.h   && ['hh', hours]   ||\n\t            days    <= 1             && ['d']           ||\n\t            days    < thresholds.d   && ['dd', days]    ||\n\t            months  <= 1             && ['M']           ||\n\t            months  < thresholds.M   && ['MM', months]  ||\n\t            years   <= 1             && ['y']           || ['yy', years];\n\t\n\t    a[2] = withoutSuffix;\n\t    a[3] = +posNegDuration > 0;\n\t    a[4] = locale;\n\t    return substituteTimeAgo.apply(null, a);\n\t}\n\t\n\t// This function allows you to set the rounding function for relative time strings\n\tfunction getSetRelativeTimeRounding (roundingFunction) {\n\t    if (roundingFunction === undefined) {\n\t        return round;\n\t    }\n\t    if (typeof(roundingFunction) === 'function') {\n\t        round = roundingFunction;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// This function allows you to set a threshold for relative time strings\n\tfunction getSetRelativeTimeThreshold (threshold, limit) {\n\t    if (thresholds[threshold] === undefined) {\n\t        return false;\n\t    }\n\t    if (limit === undefined) {\n\t        return thresholds[threshold];\n\t    }\n\t    thresholds[threshold] = limit;\n\t    if (threshold === 's') {\n\t        thresholds.ss = limit - 1;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction humanize (withSuffix) {\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var locale = this.localeData();\n\t    var output = relativeTime$1(this, !withSuffix, locale);\n\t\n\t    if (withSuffix) {\n\t        output = locale.pastFuture(+this, output);\n\t    }\n\t\n\t    return locale.postformat(output);\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\t\n\tfunction toISOString$1() {\n\t    // for ISO strings we do not use the normal bubbling rules:\n\t    //  * milliseconds bubble up until they become hours\n\t    //  * days do not bubble at all\n\t    //  * months bubble up until they become years\n\t    // This is because there is no context-free conversion between hours and days\n\t    // (think of clock changes)\n\t    // and also not between days and months (28-31 days per month)\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var seconds = abs$1(this._milliseconds) / 1000;\n\t    var days         = abs$1(this._days);\n\t    var months       = abs$1(this._months);\n\t    var minutes, hours, years;\n\t\n\t    // 3600 seconds -> 60 minutes -> 1 hour\n\t    minutes           = absFloor(seconds / 60);\n\t    hours             = absFloor(minutes / 60);\n\t    seconds %= 60;\n\t    minutes %= 60;\n\t\n\t    // 12 months -> 1 year\n\t    years  = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t\n\t    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t    var Y = years;\n\t    var M = months;\n\t    var D = days;\n\t    var h = hours;\n\t    var m = minutes;\n\t    var s = seconds;\n\t    var total = this.asSeconds();\n\t\n\t    if (!total) {\n\t        // this is the same as C#'s (Noda) and python (isodate)...\n\t        // but not other JS (goog.date)\n\t        return 'P0D';\n\t    }\n\t\n\t    return (total < 0 ? '-' : '') +\n\t        'P' +\n\t        (Y ? Y + 'Y' : '') +\n\t        (M ? M + 'M' : '') +\n\t        (D ? D + 'D' : '') +\n\t        ((h || m || s) ? 'T' : '') +\n\t        (h ? h + 'H' : '') +\n\t        (m ? m + 'M' : '') +\n\t        (s ? s + 'S' : '');\n\t}\n\t\n\tvar proto$2 = Duration.prototype;\n\t\n\tproto$2.isValid        = isValid$1;\n\tproto$2.abs            = abs;\n\tproto$2.add            = add$1;\n\tproto$2.subtract       = subtract$1;\n\tproto$2.as             = as;\n\tproto$2.asMilliseconds = asMilliseconds;\n\tproto$2.asSeconds      = asSeconds;\n\tproto$2.asMinutes      = asMinutes;\n\tproto$2.asHours        = asHours;\n\tproto$2.asDays         = asDays;\n\tproto$2.asWeeks        = asWeeks;\n\tproto$2.asMonths       = asMonths;\n\tproto$2.asYears        = asYears;\n\tproto$2.valueOf        = valueOf$1;\n\tproto$2._bubble        = bubble;\n\tproto$2.get            = get$2;\n\tproto$2.milliseconds   = milliseconds;\n\tproto$2.seconds        = seconds;\n\tproto$2.minutes        = minutes;\n\tproto$2.hours          = hours;\n\tproto$2.days           = days;\n\tproto$2.weeks          = weeks;\n\tproto$2.months         = months;\n\tproto$2.years          = years;\n\tproto$2.humanize       = humanize;\n\tproto$2.toISOString    = toISOString$1;\n\tproto$2.toString       = toISOString$1;\n\tproto$2.toJSON         = toISOString$1;\n\tproto$2.locale         = locale;\n\tproto$2.localeData     = localeData;\n\t\n\t// Deprecations\n\tproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n\tproto$2.lang = lang;\n\t\n\t// Side effect imports\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('X', 0, 0, 'unix');\n\taddFormatToken('x', 0, 0, 'valueOf');\n\t\n\t// PARSING\n\t\n\taddRegexToken('x', matchSigned);\n\taddRegexToken('X', matchTimestamp);\n\taddParseToken('X', function (input, array, config) {\n\t    config._d = new Date(parseFloat(input, 10) * 1000);\n\t});\n\taddParseToken('x', function (input, array, config) {\n\t    config._d = new Date(toInt(input));\n\t});\n\t\n\t// Side effect imports\n\t\n\t\n\thooks.version = '2.18.1';\n\t\n\tsetHookCallback(createLocal);\n\t\n\thooks.fn                    = proto;\n\thooks.min                   = min;\n\thooks.max                   = max;\n\thooks.now                   = now;\n\thooks.utc                   = createUTC;\n\thooks.unix                  = createUnix;\n\thooks.months                = listMonths;\n\thooks.isDate                = isDate;\n\thooks.locale                = getSetGlobalLocale;\n\thooks.invalid               = createInvalid;\n\thooks.duration              = createDuration;\n\thooks.isMoment              = isMoment;\n\thooks.weekdays              = listWeekdays;\n\thooks.parseZone             = createInZone;\n\thooks.localeData            = getLocale;\n\thooks.isDuration            = isDuration;\n\thooks.monthsShort           = listMonthsShort;\n\thooks.weekdaysMin           = listWeekdaysMin;\n\thooks.defineLocale          = defineLocale;\n\thooks.updateLocale          = updateLocale;\n\thooks.locales               = listLocales;\n\thooks.weekdaysShort         = listWeekdaysShort;\n\thooks.normalizeUnits        = normalizeUnits;\n\thooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\thooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\thooks.calendarFormat        = getCalendarFormat;\n\thooks.prototype             = proto;\n\t\n\treturn hooks;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)(module)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = typeof Promise === 'function' ? Promise : __webpack_require__(5);\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, setImmediate) {'use strict';\n\t\n\tvar PENDING = 'pending';\n\tvar SETTLED = 'settled';\n\tvar FULFILLED = 'fulfilled';\n\tvar REJECTED = 'rejected';\n\tvar NOOP = function () {};\n\tvar isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';\n\t\n\tvar asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;\n\tvar asyncQueue = [];\n\tvar asyncTimer;\n\t\n\tfunction asyncFlush() {\n\t\t// run promise callbacks\n\t\tfor (var i = 0; i < asyncQueue.length; i++) {\n\t\t\tasyncQueue[i][0](asyncQueue[i][1]);\n\t\t}\n\t\n\t\t// reset async asyncQueue\n\t\tasyncQueue = [];\n\t\tasyncTimer = false;\n\t}\n\t\n\tfunction asyncCall(callback, arg) {\n\t\tasyncQueue.push([callback, arg]);\n\t\n\t\tif (!asyncTimer) {\n\t\t\tasyncTimer = true;\n\t\t\tasyncSetTimer(asyncFlush, 0);\n\t\t}\n\t}\n\t\n\tfunction invokeResolver(resolver, promise) {\n\t\tfunction resolvePromise(value) {\n\t\t\tresolve(promise, value);\n\t\t}\n\t\n\t\tfunction rejectPromise(reason) {\n\t\t\treject(promise, reason);\n\t\t}\n\t\n\t\ttry {\n\t\t\tresolver(resolvePromise, rejectPromise);\n\t\t} catch (e) {\n\t\t\trejectPromise(e);\n\t\t}\n\t}\n\t\n\tfunction invokeCallback(subscriber) {\n\t\tvar owner = subscriber.owner;\n\t\tvar settled = owner._state;\n\t\tvar value = owner._data;\n\t\tvar callback = subscriber[settled];\n\t\tvar promise = subscriber.then;\n\t\n\t\tif (typeof callback === 'function') {\n\t\t\tsettled = FULFILLED;\n\t\t\ttry {\n\t\t\t\tvalue = callback(value);\n\t\t\t} catch (e) {\n\t\t\t\treject(promise, e);\n\t\t\t}\n\t\t}\n\t\n\t\tif (!handleThenable(promise, value)) {\n\t\t\tif (settled === FULFILLED) {\n\t\t\t\tresolve(promise, value);\n\t\t\t}\n\t\n\t\t\tif (settled === REJECTED) {\n\t\t\t\treject(promise, value);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction handleThenable(promise, value) {\n\t\tvar resolved;\n\t\n\t\ttry {\n\t\t\tif (promise === value) {\n\t\t\t\tthrow new TypeError('A promises callback cannot return that same promise.');\n\t\t\t}\n\t\n\t\t\tif (value && (typeof value === 'function' || typeof value === 'object')) {\n\t\t\t\t// then should be retrieved only once\n\t\t\t\tvar then = value.then;\n\t\n\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\tthen.call(value, function (val) {\n\t\t\t\t\t\tif (!resolved) {\n\t\t\t\t\t\t\tresolved = true;\n\t\n\t\t\t\t\t\t\tif (value === val) {\n\t\t\t\t\t\t\t\tfulfill(promise, val);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(promise, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function (reason) {\n\t\t\t\t\t\tif (!resolved) {\n\t\t\t\t\t\t\tresolved = true;\n\t\n\t\t\t\t\t\t\treject(promise, reason);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (!resolved) {\n\t\t\t\treject(promise, e);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\t\n\tfunction resolve(promise, value) {\n\t\tif (promise === value || !handleThenable(promise, value)) {\n\t\t\tfulfill(promise, value);\n\t\t}\n\t}\n\t\n\tfunction fulfill(promise, value) {\n\t\tif (promise._state === PENDING) {\n\t\t\tpromise._state = SETTLED;\n\t\t\tpromise._data = value;\n\t\n\t\t\tasyncCall(publishFulfillment, promise);\n\t\t}\n\t}\n\t\n\tfunction reject(promise, reason) {\n\t\tif (promise._state === PENDING) {\n\t\t\tpromise._state = SETTLED;\n\t\t\tpromise._data = reason;\n\t\n\t\t\tasyncCall(publishRejection, promise);\n\t\t}\n\t}\n\t\n\tfunction publish(promise) {\n\t\tpromise._then = promise._then.forEach(invokeCallback);\n\t}\n\t\n\tfunction publishFulfillment(promise) {\n\t\tpromise._state = FULFILLED;\n\t\tpublish(promise);\n\t}\n\t\n\tfunction publishRejection(promise) {\n\t\tpromise._state = REJECTED;\n\t\tpublish(promise);\n\t\tif (!promise._handled && isNode) {\n\t\t\tglobal.process.emit('unhandledRejection', promise._data, promise);\n\t\t}\n\t}\n\t\n\tfunction notifyRejectionHandled(promise) {\n\t\tglobal.process.emit('rejectionHandled', promise);\n\t}\n\t\n\t/**\n\t * @class\n\t */\n\tfunction Promise(resolver) {\n\t\tif (typeof resolver !== 'function') {\n\t\t\tthrow new TypeError('Promise resolver ' + resolver + ' is not a function');\n\t\t}\n\t\n\t\tif (this instanceof Promise === false) {\n\t\t\tthrow new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\t\t}\n\t\n\t\tthis._then = [];\n\t\n\t\tinvokeResolver(resolver, this);\n\t}\n\t\n\tPromise.prototype = {\n\t\tconstructor: Promise,\n\t\n\t\t_state: PENDING,\n\t\t_then: null,\n\t\t_data: undefined,\n\t\t_handled: false,\n\t\n\t\tthen: function (onFulfillment, onRejection) {\n\t\t\tvar subscriber = {\n\t\t\t\towner: this,\n\t\t\t\tthen: new this.constructor(NOOP),\n\t\t\t\tfulfilled: onFulfillment,\n\t\t\t\trejected: onRejection\n\t\t\t};\n\t\n\t\t\tif ((onRejection || onFulfillment) && !this._handled) {\n\t\t\t\tthis._handled = true;\n\t\t\t\tif (this._state === REJECTED && isNode) {\n\t\t\t\t\tasyncCall(notifyRejectionHandled, this);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (this._state === FULFILLED || this._state === REJECTED) {\n\t\t\t\t// already resolved, call callback async\n\t\t\t\tasyncCall(invokeCallback, subscriber);\n\t\t\t} else {\n\t\t\t\t// subscribe\n\t\t\t\tthis._then.push(subscriber);\n\t\t\t}\n\t\n\t\t\treturn subscriber.then;\n\t\t},\n\t\n\t\tcatch: function (onRejection) {\n\t\t\treturn this.then(null, onRejection);\n\t\t}\n\t};\n\t\n\tPromise.all = function (promises) {\n\t\tif (!Array.isArray(promises)) {\n\t\t\tthrow new TypeError('You must pass an array to Promise.all().');\n\t\t}\n\t\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tvar results = [];\n\t\t\tvar remaining = 0;\n\t\n\t\t\tfunction resolver(index) {\n\t\t\t\tremaining++;\n\t\t\t\treturn function (value) {\n\t\t\t\t\tresults[index] = value;\n\t\t\t\t\tif (!--remaining) {\n\t\t\t\t\t\tresolve(results);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tfor (var i = 0, promise; i < promises.length; i++) {\n\t\t\t\tpromise = promises[i];\n\t\n\t\t\t\tif (promise && typeof promise.then === 'function') {\n\t\t\t\t\tpromise.then(resolver(i), reject);\n\t\t\t\t} else {\n\t\t\t\t\tresults[i] = promise;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (!remaining) {\n\t\t\t\tresolve(results);\n\t\t\t}\n\t\t});\n\t};\n\t\n\tPromise.race = function (promises) {\n\t\tif (!Array.isArray(promises)) {\n\t\t\tthrow new TypeError('You must pass an array to Promise.race().');\n\t\t}\n\t\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, promise; i < promises.length; i++) {\n\t\t\t\tpromise = promises[i];\n\t\n\t\t\t\tif (promise && typeof promise.then === 'function') {\n\t\t\t\t\tpromise.then(resolve, reject);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(promise);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\t\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\t\n\tPromise.reject = function (reason) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(reason);\n\t\t});\n\t};\n\t\n\tmodule.exports = Promise;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(1).setImmediate))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(7);\n\texports.encode = exports.stringify = __webpack_require__(8);\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/*\n\t * Copyright 2012-2017 the original author or authors.\n\t *\n\t *  Licensed under the Apache License, Version 2.0 (the \"License\");\n\t *  you may not use this file except in compliance with the License.\n\t *  You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t *  Unless required by applicable law or agreed to in writing, software\n\t *  distributed under the License is distributed on an \"AS IS\" BASIS,\n\t *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t *  See the License for the specific language governing permissions and\n\t *  limitations under the License.\n\t */\n\t\n\tmodule.exports = function escapeHtml(html) {\n\t    if (!html) {\n\t        return null;\n\t    }\n\t\n\t    return html.replace(/&/g, '&amp;')\n\t        .replace(/\"/g, '&quot;')\n\t        .replace(/'/g, '&#39;')\n\t        .replace(/</g, '&lt;')\n\t        .replace(/>/g, '&gt;');\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/*\n\t * Copyright 2012-2017 the original author or authors.\n\t *\n\t *  Licensed under the Apache License, Version 2.0 (the \"License\");\n\t *  you may not use this file except in compliance with the License.\n\t *  You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t *  Unless required by applicable law or agreed to in writing, software\n\t *  distributed under the License is distributed on an \"AS IS\" BASIS,\n\t *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t *  See the License for the specific language governing permissions and\n\t *  limitations under the License.\n\t */\n\t\n\t// Object.keys polyfill\n\t// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\tif (!Object.keys) {\n\t    Object.keys = (function () {\n\t        'use strict';\n\t        var hasOwnProperty = Object.prototype.hasOwnProperty,\n\t            hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n\t            dontEnums = [\n\t                'toString',\n\t                'toLocaleString',\n\t                'valueOf',\n\t                'hasOwnProperty',\n\t                'isPrototypeOf',\n\t                'propertyIsEnumerable',\n\t                'constructor'\n\t            ],\n\t            dontEnumsLength = dontEnums.length;\n\t\n\t        return function (obj) {\n\t            if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n\t                throw new TypeError('Object.keys called on non-object');\n\t            }\n\t\n\t            var result = [], prop, i;\n\t\n\t            for (prop in obj) {\n\t                if (hasOwnProperty.call(obj, prop)) {\n\t                    result.push(prop);\n\t                }\n\t            }\n\t\n\t            if (hasDontEnumBug) {\n\t                for (i = 0; i < dontEnumsLength; i++) {\n\t                    if (hasOwnProperty.call(obj, dontEnums[i])) {\n\t                        result.push(dontEnums[i]);\n\t                    }\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t    }());\n\t}\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** charts.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 23939bc0a23e92c63354\n **/","/*\n * Copyright 2012-2017 the original author or authors.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar querystring = require('querystring');\nvar escapeHtml = require('./escape-html.js');\nvar moment = require('moment');\nvar Promise = require('pinkie-promise');\n\nrequire('./object-keys-polyfill.js');\n\nvar $nameType = $('<select id=\"nameType\">\\n'\n    + '    <option value=\"package\" selected>Package</option>\\n'\n    + '    <option value=\"author\">Author</option>\\n'\n    + '</select>');\n\n$nameType.change(function () {\n    if ($nameType.val() === 'package') {\n        $('#name').attr('name', 'package').attr('placeholder', 'package name(s) (comma separated)');\n    } else if ($nameType.val() === 'author') {\n        $('#name').attr('name', 'author').attr('placeholder', 'author name');\n    }\n});\n\nfunction getDateRange(startDate, stopDate) {\n    var dateArray = [];\n    var current = moment(startDate).startOf('day');\n    var stop = moment(stopDate).startOf('day');\n    while (current.isSameOrBefore(stop)) {\n        dateArray.push(current.toDate());\n        current = current.add(1, 'days');\n    }\n    return dateArray;\n}\n\nfunction showChart(id, title, data, xAxisType, xAxisTitle, cats) {\n\n    var series = $.map(data, function (values, packageName) {\n        return {\n            name: packageName,\n            data: values,\n            type: 'spline'\n        };\n    });\n\n    new Highcharts.Chart({\n        chart: {\n            renderTo: id,\n            zoomType: 'x'\n        },\n        colors: ['#CC333F', '#00A0B0', '#73AC42', '#EB6841', '#542437'],\n        title: {\n            text: title,\n            style: {\n                color: '#000000'\n            }\n        },\n        subtitle: {\n            text: typeof document.ontouchstart === 'undefined' ?\n                'Click and drag in the plot to zoom in' :\n                'Drag your finger over the plot to zoom in',\n            style: {\n                color: '#000000'\n            }\n        },\n        exporting: {\n            enableImages: true\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: (xAxisType === 'datetime' ? {\n            type: xAxisType,\n            maxZoom: 14 * 24 * 60 * 60 * 1000,\n            lineColor: '#000000',\n            title: {\n                text: xAxisTitle,\n                style: {\n                    color: '#000000'\n                }\n            }\n        } : {\n                type: xAxisType,\n                lineColor: '#000000',\n                categories: cats,\n                labels: {\n                    rotation: -20\n                },\n                title: {\n                    text: xAxisTitle,\n                    style: {\n                        color: '#000000'\n                    }\n                }\n            }),\n        yAxis: {\n            min: 0,\n            startOnTick: false,\n            showFirstLabel: false,\n            title: {\n                text: 'Downloads',\n                style: {\n                    color: '#000000'\n                }\n            }\n        },\n        tooltip: {\n            shared: true\n        },\n        legend: {\n            enabled: series.length > 1\n        },\n        plotOptions: {\n            spline: {\n                marker: {\n                    radius: 1.5\n                },\n                lineWidth: 1,\n                states: {\n                    hover: {\n                        lineWidth: 1\n                    }\n                },\n                threshold: null\n            }\n        },\n        series: series\n    });\n}\n\nfunction calculateTotalDownloads(downloadsPerDay) {\n    var totalDownloads = 0;\n    $.each(downloadsPerDay, function (date, downloadsOfDay) {\n        totalDownloads += downloadsOfDay;\n    });\n    return totalDownloads;\n}\n\nfunction formatNumber(number) {\n    return number.toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction getDailyDownloadData(downloadData, dateRange) {\n\n    var dailyData = {};\n\n    $.each(downloadData, function (packageName, data) {\n        var values = [];\n        for (var i = 0; i < dateRange.length; i++) {\n            var key = dateToDayKey(dateRange[i]);\n            var dateAsMidnight = moment(dateRange[i]).startOf('day').valueOf();\n            values.push([dateAsMidnight, data[key] || 0]);\n        }\n        dailyData[packageName] = values;\n    });\n\n    return dailyData;\n}\n\nfunction dateToDayKey(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nfunction dateToWeekKey(date) {\n    return moment(date).format('GGGG-[W]WW');\n}\n\nfunction dateToMonthKey(date) {\n    return moment(date).format('MMM YYYY');\n}\n\nfunction dateToYearKey(date) {\n    return moment(date).format('YYYY');\n}\n\nfunction getDataGroupedPerPeriod(downloadData, dateRange, dateToPeriod, nthVisibleAxisLabel) {\n\n    var groupedData = {};\n\n    var xAxisLabels = null;\n    var coveredPeriods = {};\n\n    $.each(downloadData, function (packageName, data) {\n        var values = [];\n\n        var periodSum = 0;\n        var lastPeriod = null;\n\n        for (var i = 0; i < dateRange.length; i++) {\n\n            var key = dateToDayKey(dateRange[i]);\n            var currentPeriod = dateToPeriod(dateRange[i]);\n\n            if (coveredPeriods !== null) {\n                coveredPeriods[currentPeriod] = true;\n            }\n\n            if (currentPeriod !== lastPeriod && lastPeriod !== null) {\n                values.push({ name: lastPeriod, y: periodSum });\n                periodSum = 0;\n            }\n\n            periodSum += data[key] || 0;\n\n            lastPeriod = currentPeriod;\n\n            if (i === dateRange.length - 1) {\n                // push data for last (incomplete) period\n                values.push({ name: currentPeriod, y: periodSum });\n            }\n        }\n\n        if (coveredPeriods !== null) {\n            xAxisLabels = Object.keys(coveredPeriods);\n        }\n\n        coveredPeriods = null;\n\n        groupedData[packageName] = values;\n    });\n\n    for (var i = 0; i < xAxisLabels.length; i++) {\n        if (i % nthVisibleAxisLabel !== 0) {\n            xAxisLabels[i] = ' ';\n        }\n    }\n\n    return {\n        data: groupedData,\n        xAxisLabels: xAxisLabels\n    };\n}\n\nfunction requestData(url) {\n    return $.ajax({\n        url: url,\n        dataType: 'json'\n    });\n}\n\nfunction getDownloadsUrl(packageNames, fromDate, untilDate) {\n\n    console.dir(packageNames);\n\n    var packageNamesQueryString = '';\n    $.each(packageNames, function (i, packageName) {\n        packageNamesQueryString += 'package=' + encodeURIComponent(packageName.trim()) + '&';\n    });\n\n    return '/api/download-counts?' + packageNamesQueryString\n        + 'from=' + dateToDayKey(fromDate)\n        + '&until=' + dateToDayKey(untilDate);\n}\n\nfunction sumUpDownloadCounts(downloadData) {\n    var summedUpDownloads = {};\n    $.each(downloadData, function (packageName, packageDownloads) {\n        $.each(packageDownloads, function (date, packageDownloadsForDate) {\n            if (typeof summedUpDownloads[date] !== 'undefined') {\n                summedUpDownloads[date] = summedUpDownloads[date] + packageDownloadsForDate;\n            } else {\n                summedUpDownloads[date] = packageDownloadsForDate;\n            }\n        })\n    });\n\n    return { total: summedUpDownloads };\n}\n\nfunction drawCharts(downloadData, fromDate, untilDate) {\n\n    var dateRange = getDateRange(fromDate, untilDate);\n\n    var dailyDownloadData = getDailyDownloadData(downloadData, dateRange);\n    showChart('days', 'Downloads per day', dailyDownloadData, 'datetime', 'Date');\n\n    var weeklyDownloadData = getDataGroupedPerPeriod(downloadData, dateRange, dateToWeekKey, 4);\n    showChart('weeks', 'Downloads per week', weeklyDownloadData.data, 'categories', 'Week',\n        weeklyDownloadData.xAxisLabels);\n\n    var monthlyDownloadData = getDataGroupedPerPeriod(downloadData, dateRange, dateToMonthKey, 1);\n    showChart('months', 'Downloads per month', monthlyDownloadData.data, 'categories', 'Month',\n        monthlyDownloadData.xAxisLabels);\n\n    var annualDownloadData = getDataGroupedPerPeriod(downloadData, dateRange, dateToYearKey, 1);\n    showChart('years', 'Downloads per year', annualDownloadData.data, 'categories', 'Year',\n        annualDownloadData.xAxisLabels);\n\n}\n\nfunction showTotalDownloads(sanitizedData, fromDate, untilDate, showSum) {\n\n    var sum = 0;\n    var $table = $('<table class=\"alternating\"><tr><td>package</td><td>downloads</td></tr></table>');\n\n    var totals = $.map(sanitizedData, function (downloads, packageName) {\n        var totalDownloads = calculateTotalDownloads(downloads);\n\n        if (showSum) {\n            sum += totalDownloads;\n        }\n\n        return { packageName: packageName, downloads: totalDownloads };\n    });\n\n    var sortedTotals = totals.sort(function (a, b) {\n        return b.downloads - a.downloads;\n    });\n\n    $.each(sortedTotals, function (index, total) {\n\n        var packageHtml;\n\n        if (showSum) {\n            packageHtml = '<a href=\"charts.html?package=' + total.packageName\n                + '&from=' + dateToDayKey(fromDate) + '&to=' + dateToDayKey(untilDate) + '\">'\n                + total.packageName + '</a>';\n        } else {\n            packageHtml = total.packageName;\n        }\n\n        $table.append('<tr><td>' + packageHtml + '</td><td>' + formatNumber(total.downloads) + '</td></tr>');\n    });\n\n    if (showSum) {\n        $table.append('<tr><td><strong>Σ</strong></td><td><strong>' + formatNumber(sum) + '</strong></td></tr>');\n    }\n\n    $('#pkgs')\n        .after($table)\n        .after('<p>Total number of downloads between <em>'\n        + dateToDayKey(fromDate) + '</em> and <em>'\n        + dateToDayKey(untilDate) + '</em>:');\n}\n\nfunction getDownloadData(packageNames, fromDate, untilDate) {\n    return new Promise(function (accept, reject) {\n\n        var downloadsUrl = getDownloadsUrl(packageNames, fromDate, untilDate);\n\n        var downloadData = requestData(downloadsUrl);\n\n        return accept(downloadData);\n    });\n}\n\n\nfunction showPackageStats(packageNames, fromDate, untilDate) {\n\n    var joinedPackageNames = packageNames.join(', ');\n\n    $('h2').append(' for package'\n        + (packageNames.length > 1 ? 's' : '')\n        + ' <em>' + joinedPackageNames + '</em>');\n    $nameType.val('package');\n    $('#name')\n        .attr('name', 'package')\n        .val(joinedPackageNames);\n\n    if (packageNames.length > 5) {\n        window.alert('You cannot compare more than 5 packages at once.');\n        return;\n    }\n\n    var $npmStat = $('#npm-stat');\n\n    $npmStat.after('<p id=\"loading\"><img src=\"loading.gif\" /></p>');\n\n    if (packageNames.length === 1) {\n        $npmStat.after('<p><a href=\"https://www.npmjs.com/package/' + packageNames + '\">View package on npm</a></p>');\n    }\n\n    getDownloadData(packageNames, fromDate, untilDate).then(function (downloadData) {\n\n        $('#loading').remove();\n\n        showTotalDownloads(downloadData, fromDate, untilDate, false);\n\n        drawCharts(downloadData, fromDate, untilDate);\n\n    });\n}\n\nfunction showAuthorStats(authorName, fromDate, untilDate) {\n    $('h2').html('Downloads for author <em>' + authorName + '</em>');\n    $nameType.val('author');\n    $('#name')\n        .attr('name', 'author')\n        .val(authorName);\n    $('#npm-stat').after('<p id=\"loading\"></p><p><a href=\"https://npmjs.org/~'\n        + authorName + '\">View author on npm</a></p>');\n\n    $('#loading').html('<img src=\"loading.gif\" />');\n\n    getPackagesForAuthor(authorName).then(function (packageNames) {\n\n        getDownloadData(packageNames, fromDate, untilDate).then(function (sanitizedData) {\n\n            $('#loading').remove();\n\n            showTotalDownloads(sanitizedData, fromDate, untilDate, true);\n\n            var summedUpDownloadCounts = sumUpDownloadCounts(sanitizedData);\n\n            drawCharts(summedUpDownloadCounts, fromDate, untilDate);\n\n        });\n\n    });\n}\n\nfunction getPackagesForAuthor(authorName) {\n    var url = '/api/author-packages?author=' + authorName;\n    return requestData(url)\n}\n\nfunction initDate(urlParams, type, baseDate) {\n    var date;\n\n    if (urlParams[type]) {\n        date = moment(urlParams[type]).startOf('day');\n    } else if (baseDate) {\n        date = moment(baseDate).startOf('day').subtract(1, 'year');\n    } else {\n        date = moment().startOf('day').subtract(1, 'day');\n    }\n    if (!date.isValid()) {\n        alert('Invalid date format in URL parameter \"' + type + '\"');\n        return;\n    }\n    date = date.toDate();\n    $('input[name=\"' + type + '\"]').val(dateToDayKey(date));\n\n    return date;\n}\n\n$(function () {\n    $('#nameType').replaceWith($nameType);\n    $('#from, #to').attr('title', 'If the date fields are omitted, you will see the data of the past year.');\n\n    var urlParams = querystring.decode(window.location.search ? window.location.search.substring(1) : '');\n\n    var packageNames = urlParams['package'];\n    var authorName = escapeHtml(urlParams['author']);\n\n    if (!packageNames && !authorName) {\n        return;\n    }\n\n    var untilDate = initDate(urlParams, 'to');\n    var fromDate = initDate(urlParams, 'from', untilDate);\n\n    if (packageNames) {\n        if (!(packageNames instanceof Array)) {\n            packageNames = [packageNames];\n        }\n\n        packageNames = $.map(packageNames, function (packageName) {\n            return escapeHtml(packageName.trim());\n        });\n\n        $('title').html('npm-stat: ' + packageNames.join(', '));\n        showPackageStats(packageNames, fromDate, untilDate);\n    } else if (authorName) {\n        $('title').html('npm-stat: ' + authorName);\n        showAuthorStats(authorName, fromDate, untilDate);\n    }\n});\n\nwindow.submitForm = function submitForm() {\n\n    var formData = {};\n\n    if ($nameType.val() === 'package') {\n        var packageNames = $('input[name=package]').val().split(',');\n\n        if (packageNames.length >= 1 && packageNames[0].trim() !== '') {\n            formData['package'] = $.map(packageNames, function (packageName) {\n                return packageName.trim();\n            });\n        } else {\n            formData['package'] = ['clone'];\n        }\n    } else if ($nameType.val() === 'author') {\n        var authorName = $('input[name=author]').val();\n        formData['author'] = authorName || 'pvorb';\n    }\n\n    formData['from'] = $('#from').val();\n    formData['to'] = $('#to').val();\n\n    for (var key in formData) {\n        if (!formData[key]) {\n            delete formData[key];\n        }\n    }\n\n    window.location = '/charts.html?' + querystring.encode(formData);\n\n    return false;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/js/charts.js\n ** module id = 0\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/timers-browserify/main.js\n ** module id = 1\n ** module chunks = 0\n **/","function webpackContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackContext.keys = function() { return []; };\nwebpackContext.resolve = webpackContext;\nmodule.exports = webpackContext;\nwebpackContext.id = 2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/moment/locale ^$\n ** module id = 2\n ** module chunks = 0\n **/","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/moment/moment.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = typeof Promise === 'function' ? Promise : require('pinkie');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pinkie-promise/index.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar PENDING = 'pending';\nvar SETTLED = 'settled';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function () {};\nvar isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';\n\nvar asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush() {\n\t// run promise callbacks\n\tfor (var i = 0; i < asyncQueue.length; i++) {\n\t\tasyncQueue[i][0](asyncQueue[i][1]);\n\t}\n\n\t// reset async asyncQueue\n\tasyncQueue = [];\n\tasyncTimer = false;\n}\n\nfunction asyncCall(callback, arg) {\n\tasyncQueue.push([callback, arg]);\n\n\tif (!asyncTimer) {\n\t\tasyncTimer = true;\n\t\tasyncSetTimer(asyncFlush, 0);\n\t}\n}\n\nfunction invokeResolver(resolver, promise) {\n\tfunction resolvePromise(value) {\n\t\tresolve(promise, value);\n\t}\n\n\tfunction rejectPromise(reason) {\n\t\treject(promise, reason);\n\t}\n\n\ttry {\n\t\tresolver(resolvePromise, rejectPromise);\n\t} catch (e) {\n\t\trejectPromise(e);\n\t}\n}\n\nfunction invokeCallback(subscriber) {\n\tvar owner = subscriber.owner;\n\tvar settled = owner._state;\n\tvar value = owner._data;\n\tvar callback = subscriber[settled];\n\tvar promise = subscriber.then;\n\n\tif (typeof callback === 'function') {\n\t\tsettled = FULFILLED;\n\t\ttry {\n\t\t\tvalue = callback(value);\n\t\t} catch (e) {\n\t\t\treject(promise, e);\n\t\t}\n\t}\n\n\tif (!handleThenable(promise, value)) {\n\t\tif (settled === FULFILLED) {\n\t\t\tresolve(promise, value);\n\t\t}\n\n\t\tif (settled === REJECTED) {\n\t\t\treject(promise, value);\n\t\t}\n\t}\n}\n\nfunction handleThenable(promise, value) {\n\tvar resolved;\n\n\ttry {\n\t\tif (promise === value) {\n\t\t\tthrow new TypeError('A promises callback cannot return that same promise.');\n\t\t}\n\n\t\tif (value && (typeof value === 'function' || typeof value === 'object')) {\n\t\t\t// then should be retrieved only once\n\t\t\tvar then = value.then;\n\n\t\t\tif (typeof then === 'function') {\n\t\t\t\tthen.call(value, function (val) {\n\t\t\t\t\tif (!resolved) {\n\t\t\t\t\t\tresolved = true;\n\n\t\t\t\t\t\tif (value === val) {\n\t\t\t\t\t\t\tfulfill(promise, val);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(promise, val);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, function (reason) {\n\t\t\t\t\tif (!resolved) {\n\t\t\t\t\t\tresolved = true;\n\n\t\t\t\t\t\treject(promise, reason);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tif (!resolved) {\n\t\t\treject(promise, e);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction resolve(promise, value) {\n\tif (promise === value || !handleThenable(promise, value)) {\n\t\tfulfill(promise, value);\n\t}\n}\n\nfunction fulfill(promise, value) {\n\tif (promise._state === PENDING) {\n\t\tpromise._state = SETTLED;\n\t\tpromise._data = value;\n\n\t\tasyncCall(publishFulfillment, promise);\n\t}\n}\n\nfunction reject(promise, reason) {\n\tif (promise._state === PENDING) {\n\t\tpromise._state = SETTLED;\n\t\tpromise._data = reason;\n\n\t\tasyncCall(publishRejection, promise);\n\t}\n}\n\nfunction publish(promise) {\n\tpromise._then = promise._then.forEach(invokeCallback);\n}\n\nfunction publishFulfillment(promise) {\n\tpromise._state = FULFILLED;\n\tpublish(promise);\n}\n\nfunction publishRejection(promise) {\n\tpromise._state = REJECTED;\n\tpublish(promise);\n\tif (!promise._handled && isNode) {\n\t\tglobal.process.emit('unhandledRejection', promise._data, promise);\n\t}\n}\n\nfunction notifyRejectionHandled(promise) {\n\tglobal.process.emit('rejectionHandled', promise);\n}\n\n/**\n * @class\n */\nfunction Promise(resolver) {\n\tif (typeof resolver !== 'function') {\n\t\tthrow new TypeError('Promise resolver ' + resolver + ' is not a function');\n\t}\n\n\tif (this instanceof Promise === false) {\n\t\tthrow new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\t}\n\n\tthis._then = [];\n\n\tinvokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n\tconstructor: Promise,\n\n\t_state: PENDING,\n\t_then: null,\n\t_data: undefined,\n\t_handled: false,\n\n\tthen: function (onFulfillment, onRejection) {\n\t\tvar subscriber = {\n\t\t\towner: this,\n\t\t\tthen: new this.constructor(NOOP),\n\t\t\tfulfilled: onFulfillment,\n\t\t\trejected: onRejection\n\t\t};\n\n\t\tif ((onRejection || onFulfillment) && !this._handled) {\n\t\t\tthis._handled = true;\n\t\t\tif (this._state === REJECTED && isNode) {\n\t\t\t\tasyncCall(notifyRejectionHandled, this);\n\t\t\t}\n\t\t}\n\n\t\tif (this._state === FULFILLED || this._state === REJECTED) {\n\t\t\t// already resolved, call callback async\n\t\t\tasyncCall(invokeCallback, subscriber);\n\t\t} else {\n\t\t\t// subscribe\n\t\t\tthis._then.push(subscriber);\n\t\t}\n\n\t\treturn subscriber.then;\n\t},\n\n\tcatch: function (onRejection) {\n\t\treturn this.then(null, onRejection);\n\t}\n};\n\nPromise.all = function (promises) {\n\tif (!Array.isArray(promises)) {\n\t\tthrow new TypeError('You must pass an array to Promise.all().');\n\t}\n\n\treturn new Promise(function (resolve, reject) {\n\t\tvar results = [];\n\t\tvar remaining = 0;\n\n\t\tfunction resolver(index) {\n\t\t\tremaining++;\n\t\t\treturn function (value) {\n\t\t\t\tresults[index] = value;\n\t\t\t\tif (!--remaining) {\n\t\t\t\t\tresolve(results);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfor (var i = 0, promise; i < promises.length; i++) {\n\t\t\tpromise = promises[i];\n\n\t\t\tif (promise && typeof promise.then === 'function') {\n\t\t\t\tpromise.then(resolver(i), reject);\n\t\t\t} else {\n\t\t\t\tresults[i] = promise;\n\t\t\t}\n\t\t}\n\n\t\tif (!remaining) {\n\t\t\tresolve(results);\n\t\t}\n\t});\n};\n\nPromise.race = function (promises) {\n\tif (!Array.isArray(promises)) {\n\t\tthrow new TypeError('You must pass an array to Promise.race().');\n\t}\n\n\treturn new Promise(function (resolve, reject) {\n\t\tfor (var i = 0, promise; i < promises.length; i++) {\n\t\t\tpromise = promises[i];\n\n\t\t\tif (promise && typeof promise.then === 'function') {\n\t\t\t\tpromise.then(resolve, reject);\n\t\t\t} else {\n\t\t\t\tresolve(promise);\n\t\t\t}\n\t\t}\n\t});\n};\n\nPromise.resolve = function (value) {\n\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\treturn value;\n\t}\n\n\treturn new Promise(function (resolve) {\n\t\tresolve(value);\n\t});\n};\n\nPromise.reject = function (reason) {\n\treturn new Promise(function (resolve, reject) {\n\t\treject(reason);\n\t});\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pinkie/index.js\n ** module id = 5\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 6\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/decode.js\n ** module id = 7\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/encode.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/index.js\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 10\n ** module chunks = 0\n **/","/*\n * Copyright 2012-2017 the original author or authors.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nmodule.exports = function escapeHtml(html) {\n    if (!html) {\n        return null;\n    }\n\n    return html.replace(/&/g, '&amp;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/js/escape-html.js\n ** module id = 11\n ** module chunks = 0\n **/","/*\n * Copyright 2012-2017 the original author or authors.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// Object.keys polyfill\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\nif (!Object.keys) {\n    Object.keys = (function () {\n        'use strict';\n        var hasOwnProperty = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n            dontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ],\n            dontEnumsLength = dontEnums.length;\n\n        return function (obj) {\n            if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                throw new TypeError('Object.keys called on non-object');\n            }\n\n            var result = [], prop, i;\n\n            for (prop in obj) {\n                if (hasOwnProperty.call(obj, prop)) {\n                    result.push(prop);\n                }\n            }\n\n            if (hasDontEnumBug) {\n                for (i = 0; i < dontEnumsLength; i++) {\n                    if (hasOwnProperty.call(obj, dontEnums[i])) {\n                        result.push(dontEnums[i]);\n                    }\n                }\n            }\n            return result;\n        };\n    }());\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/js/object-keys-polyfill.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}